/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.datamgt.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DictVersion service. Represents a row in the &quot;opencps_dictversion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.opencps.datamgt.model.impl.DictVersionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.opencps.datamgt.model.impl.DictVersionImpl}.
 * </p>
 *
 * @author khoavd
 * @see DictVersion
 * @see org.opencps.datamgt.model.impl.DictVersionImpl
 * @see org.opencps.datamgt.model.impl.DictVersionModelImpl
 * @generated
 */
public interface DictVersionModel extends BaseModel<DictVersion> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a dict version model instance should use the {@link DictVersion} interface instead.
	 */

	/**
	 * Returns the primary key of this dict version.
	 *
	 * @return the primary key of this dict version
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this dict version.
	 *
	 * @param primaryKey the primary key of this dict version
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the dict version ID of this dict version.
	 *
	 * @return the dict version ID of this dict version
	 */
	public long getDictVersionId();

	/**
	 * Sets the dict version ID of this dict version.
	 *
	 * @param dictVersionId the dict version ID of this dict version
	 */
	public void setDictVersionId(long dictVersionId);

	/**
	 * Returns the company ID of this dict version.
	 *
	 * @return the company ID of this dict version
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this dict version.
	 *
	 * @param companyId the company ID of this dict version
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this dict version.
	 *
	 * @return the group ID of this dict version
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this dict version.
	 *
	 * @param groupId the group ID of this dict version
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the user ID of this dict version.
	 *
	 * @return the user ID of this dict version
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this dict version.
	 *
	 * @param userId the user ID of this dict version
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this dict version.
	 *
	 * @return the user uuid of this dict version
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this dict version.
	 *
	 * @param userUuid the user uuid of this dict version
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the create date of this dict version.
	 *
	 * @return the create date of this dict version
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this dict version.
	 *
	 * @param createDate the create date of this dict version
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this dict version.
	 *
	 * @return the modified date of this dict version
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this dict version.
	 *
	 * @param modifiedDate the modified date of this dict version
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the dict collection ID of this dict version.
	 *
	 * @return the dict collection ID of this dict version
	 */
	public long getDictCollectionId();

	/**
	 * Sets the dict collection ID of this dict version.
	 *
	 * @param dictCollectionId the dict collection ID of this dict version
	 */
	public void setDictCollectionId(long dictCollectionId);

	/**
	 * Returns the version of this dict version.
	 *
	 * @return the version of this dict version
	 */
	@AutoEscape
	public String getVersion();

	/**
	 * Sets the version of this dict version.
	 *
	 * @param version the version of this dict version
	 */
	public void setVersion(String version);

	/**
	 * Returns the description of this dict version.
	 *
	 * @return the description of this dict version
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this dict version.
	 *
	 * @param description the description of this dict version
	 */
	public void setDescription(String description);

	/**
	 * Returns the validated from of this dict version.
	 *
	 * @return the validated from of this dict version
	 */
	public Date getValidatedFrom();

	/**
	 * Sets the validated from of this dict version.
	 *
	 * @param validatedFrom the validated from of this dict version
	 */
	public void setValidatedFrom(Date validatedFrom);

	/**
	 * Returns the validated to of this dict version.
	 *
	 * @return the validated to of this dict version
	 */
	public Date getValidatedTo();

	/**
	 * Sets the validated to of this dict version.
	 *
	 * @param validatedTo the validated to of this dict version
	 */
	public void setValidatedTo(Date validatedTo);

	/**
	 * Returns the issue status of this dict version.
	 *
	 * @return the issue status of this dict version
	 */
	public int getIssueStatus();

	/**
	 * Sets the issue status of this dict version.
	 *
	 * @param issueStatus the issue status of this dict version
	 */
	public void setIssueStatus(int issueStatus);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(org.opencps.datamgt.model.DictVersion dictVersion);

	@Override
	public int hashCode();

	@Override
	public CacheModel<org.opencps.datamgt.model.DictVersion> toCacheModel();

	@Override
	public org.opencps.datamgt.model.DictVersion toEscapedModel();

	@Override
	public org.opencps.datamgt.model.DictVersion toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}