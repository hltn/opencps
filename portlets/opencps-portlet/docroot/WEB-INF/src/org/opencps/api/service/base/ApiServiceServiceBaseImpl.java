/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.api.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import com.liferay.portlet.documentlibrary.service.persistence.DLFileEntryPersistence;

import org.opencps.api.model.ApiService;
import org.opencps.api.service.ApiServiceService;
import org.opencps.api.service.persistence.ApiServicePersistence;

import org.opencps.dossiermgt.service.persistence.DossierFileFinder;
import org.opencps.dossiermgt.service.persistence.DossierFilePersistence;
import org.opencps.dossiermgt.service.persistence.DossierFinder;
import org.opencps.dossiermgt.service.persistence.DossierPartPersistence;
import org.opencps.dossiermgt.service.persistence.DossierPersistence;

import org.opencps.processmgt.service.persistence.ProcessOrderFinder;
import org.opencps.processmgt.service.persistence.ProcessOrderPersistence;
import org.opencps.processmgt.service.persistence.ProcessWorkflowFinder;
import org.opencps.processmgt.service.persistence.ProcessWorkflowPersistence;

import org.opencps.servicemgt.service.persistence.ServiceInfoFinder;
import org.opencps.servicemgt.service.persistence.ServiceInfoPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the api service remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link org.opencps.api.service.impl.ApiServiceServiceImpl}.
 * </p>
 *
 * @author trungdk
 * @see org.opencps.api.service.impl.ApiServiceServiceImpl
 * @see org.opencps.api.service.ApiServiceServiceUtil
 * @generated
 */
public abstract class ApiServiceServiceBaseImpl extends BaseServiceImpl
	implements ApiServiceService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link org.opencps.api.service.ApiServiceServiceUtil} to access the api service remote service.
	 */

	/**
	 * Returns the api service local service.
	 *
	 * @return the api service local service
	 */
	public org.opencps.api.service.ApiServiceLocalService getApiServiceLocalService() {
		return apiServiceLocalService;
	}

	/**
	 * Sets the api service local service.
	 *
	 * @param apiServiceLocalService the api service local service
	 */
	public void setApiServiceLocalService(
		org.opencps.api.service.ApiServiceLocalService apiServiceLocalService) {
		this.apiServiceLocalService = apiServiceLocalService;
	}

	/**
	 * Returns the api service remote service.
	 *
	 * @return the api service remote service
	 */
	public org.opencps.api.service.ApiServiceService getApiServiceService() {
		return apiServiceService;
	}

	/**
	 * Sets the api service remote service.
	 *
	 * @param apiServiceService the api service remote service
	 */
	public void setApiServiceService(
		org.opencps.api.service.ApiServiceService apiServiceService) {
		this.apiServiceService = apiServiceService;
	}

	/**
	 * Returns the api service persistence.
	 *
	 * @return the api service persistence
	 */
	public ApiServicePersistence getApiServicePersistence() {
		return apiServicePersistence;
	}

	/**
	 * Sets the api service persistence.
	 *
	 * @param apiServicePersistence the api service persistence
	 */
	public void setApiServicePersistence(
		ApiServicePersistence apiServicePersistence) {
		this.apiServicePersistence = apiServicePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	/**
	 * Returns the d l app local service.
	 *
	 * @return the d l app local service
	 */
	public com.liferay.portlet.documentlibrary.service.DLAppLocalService getDLAppLocalService() {
		return dlAppLocalService;
	}

	/**
	 * Sets the d l app local service.
	 *
	 * @param dlAppLocalService the d l app local service
	 */
	public void setDLAppLocalService(
		com.liferay.portlet.documentlibrary.service.DLAppLocalService dlAppLocalService) {
		this.dlAppLocalService = dlAppLocalService;
	}

	/**
	 * Returns the d l app remote service.
	 *
	 * @return the d l app remote service
	 */
	public com.liferay.portlet.documentlibrary.service.DLAppService getDLAppService() {
		return dlAppService;
	}

	/**
	 * Sets the d l app remote service.
	 *
	 * @param dlAppService the d l app remote service
	 */
	public void setDLAppService(
		com.liferay.portlet.documentlibrary.service.DLAppService dlAppService) {
		this.dlAppService = dlAppService;
	}

	/**
	 * Returns the document library file entry local service.
	 *
	 * @return the document library file entry local service
	 */
	public com.liferay.portlet.documentlibrary.service.DLFileEntryLocalService getDLFileEntryLocalService() {
		return dlFileEntryLocalService;
	}

	/**
	 * Sets the document library file entry local service.
	 *
	 * @param dlFileEntryLocalService the document library file entry local service
	 */
	public void setDLFileEntryLocalService(
		com.liferay.portlet.documentlibrary.service.DLFileEntryLocalService dlFileEntryLocalService) {
		this.dlFileEntryLocalService = dlFileEntryLocalService;
	}

	/**
	 * Returns the document library file entry remote service.
	 *
	 * @return the document library file entry remote service
	 */
	public com.liferay.portlet.documentlibrary.service.DLFileEntryService getDLFileEntryService() {
		return dlFileEntryService;
	}

	/**
	 * Sets the document library file entry remote service.
	 *
	 * @param dlFileEntryService the document library file entry remote service
	 */
	public void setDLFileEntryService(
		com.liferay.portlet.documentlibrary.service.DLFileEntryService dlFileEntryService) {
		this.dlFileEntryService = dlFileEntryService;
	}

	/**
	 * Returns the document library file entry persistence.
	 *
	 * @return the document library file entry persistence
	 */
	public DLFileEntryPersistence getDLFileEntryPersistence() {
		return dlFileEntryPersistence;
	}

	/**
	 * Sets the document library file entry persistence.
	 *
	 * @param dlFileEntryPersistence the document library file entry persistence
	 */
	public void setDLFileEntryPersistence(
		DLFileEntryPersistence dlFileEntryPersistence) {
		this.dlFileEntryPersistence = dlFileEntryPersistence;
	}

	/**
	 * Returns the dossier local service.
	 *
	 * @return the dossier local service
	 */
	public org.opencps.dossiermgt.service.DossierLocalService getDossierLocalService() {
		return dossierLocalService;
	}

	/**
	 * Sets the dossier local service.
	 *
	 * @param dossierLocalService the dossier local service
	 */
	public void setDossierLocalService(
		org.opencps.dossiermgt.service.DossierLocalService dossierLocalService) {
		this.dossierLocalService = dossierLocalService;
	}

	/**
	 * Returns the dossier remote service.
	 *
	 * @return the dossier remote service
	 */
	public org.opencps.dossiermgt.service.DossierService getDossierService() {
		return dossierService;
	}

	/**
	 * Sets the dossier remote service.
	 *
	 * @param dossierService the dossier remote service
	 */
	public void setDossierService(
		org.opencps.dossiermgt.service.DossierService dossierService) {
		this.dossierService = dossierService;
	}

	/**
	 * Returns the dossier persistence.
	 *
	 * @return the dossier persistence
	 */
	public DossierPersistence getDossierPersistence() {
		return dossierPersistence;
	}

	/**
	 * Sets the dossier persistence.
	 *
	 * @param dossierPersistence the dossier persistence
	 */
	public void setDossierPersistence(DossierPersistence dossierPersistence) {
		this.dossierPersistence = dossierPersistence;
	}

	/**
	 * Returns the dossier finder.
	 *
	 * @return the dossier finder
	 */
	public DossierFinder getDossierFinder() {
		return dossierFinder;
	}

	/**
	 * Sets the dossier finder.
	 *
	 * @param dossierFinder the dossier finder
	 */
	public void setDossierFinder(DossierFinder dossierFinder) {
		this.dossierFinder = dossierFinder;
	}

	/**
	 * Returns the dossier file local service.
	 *
	 * @return the dossier file local service
	 */
	public org.opencps.dossiermgt.service.DossierFileLocalService getDossierFileLocalService() {
		return dossierFileLocalService;
	}

	/**
	 * Sets the dossier file local service.
	 *
	 * @param dossierFileLocalService the dossier file local service
	 */
	public void setDossierFileLocalService(
		org.opencps.dossiermgt.service.DossierFileLocalService dossierFileLocalService) {
		this.dossierFileLocalService = dossierFileLocalService;
	}

	/**
	 * Returns the dossier file remote service.
	 *
	 * @return the dossier file remote service
	 */
	public org.opencps.dossiermgt.service.DossierFileService getDossierFileService() {
		return dossierFileService;
	}

	/**
	 * Sets the dossier file remote service.
	 *
	 * @param dossierFileService the dossier file remote service
	 */
	public void setDossierFileService(
		org.opencps.dossiermgt.service.DossierFileService dossierFileService) {
		this.dossierFileService = dossierFileService;
	}

	/**
	 * Returns the dossier file persistence.
	 *
	 * @return the dossier file persistence
	 */
	public DossierFilePersistence getDossierFilePersistence() {
		return dossierFilePersistence;
	}

	/**
	 * Sets the dossier file persistence.
	 *
	 * @param dossierFilePersistence the dossier file persistence
	 */
	public void setDossierFilePersistence(
		DossierFilePersistence dossierFilePersistence) {
		this.dossierFilePersistence = dossierFilePersistence;
	}

	/**
	 * Returns the dossier file finder.
	 *
	 * @return the dossier file finder
	 */
	public DossierFileFinder getDossierFileFinder() {
		return dossierFileFinder;
	}

	/**
	 * Sets the dossier file finder.
	 *
	 * @param dossierFileFinder the dossier file finder
	 */
	public void setDossierFileFinder(DossierFileFinder dossierFileFinder) {
		this.dossierFileFinder = dossierFileFinder;
	}

	/**
	 * Returns the dossier part local service.
	 *
	 * @return the dossier part local service
	 */
	public org.opencps.dossiermgt.service.DossierPartLocalService getDossierPartLocalService() {
		return dossierPartLocalService;
	}

	/**
	 * Sets the dossier part local service.
	 *
	 * @param dossierPartLocalService the dossier part local service
	 */
	public void setDossierPartLocalService(
		org.opencps.dossiermgt.service.DossierPartLocalService dossierPartLocalService) {
		this.dossierPartLocalService = dossierPartLocalService;
	}

	/**
	 * Returns the dossier part remote service.
	 *
	 * @return the dossier part remote service
	 */
	public org.opencps.dossiermgt.service.DossierPartService getDossierPartService() {
		return dossierPartService;
	}

	/**
	 * Sets the dossier part remote service.
	 *
	 * @param dossierPartService the dossier part remote service
	 */
	public void setDossierPartService(
		org.opencps.dossiermgt.service.DossierPartService dossierPartService) {
		this.dossierPartService = dossierPartService;
	}

	/**
	 * Returns the dossier part persistence.
	 *
	 * @return the dossier part persistence
	 */
	public DossierPartPersistence getDossierPartPersistence() {
		return dossierPartPersistence;
	}

	/**
	 * Sets the dossier part persistence.
	 *
	 * @param dossierPartPersistence the dossier part persistence
	 */
	public void setDossierPartPersistence(
		DossierPartPersistence dossierPartPersistence) {
		this.dossierPartPersistence = dossierPartPersistence;
	}

	/**
	 * Returns the process order local service.
	 *
	 * @return the process order local service
	 */
	public org.opencps.processmgt.service.ProcessOrderLocalService getProcessOrderLocalService() {
		return processOrderLocalService;
	}

	/**
	 * Sets the process order local service.
	 *
	 * @param processOrderLocalService the process order local service
	 */
	public void setProcessOrderLocalService(
		org.opencps.processmgt.service.ProcessOrderLocalService processOrderLocalService) {
		this.processOrderLocalService = processOrderLocalService;
	}

	/**
	 * Returns the process order remote service.
	 *
	 * @return the process order remote service
	 */
	public org.opencps.processmgt.service.ProcessOrderService getProcessOrderService() {
		return processOrderService;
	}

	/**
	 * Sets the process order remote service.
	 *
	 * @param processOrderService the process order remote service
	 */
	public void setProcessOrderService(
		org.opencps.processmgt.service.ProcessOrderService processOrderService) {
		this.processOrderService = processOrderService;
	}

	/**
	 * Returns the process order persistence.
	 *
	 * @return the process order persistence
	 */
	public ProcessOrderPersistence getProcessOrderPersistence() {
		return processOrderPersistence;
	}

	/**
	 * Sets the process order persistence.
	 *
	 * @param processOrderPersistence the process order persistence
	 */
	public void setProcessOrderPersistence(
		ProcessOrderPersistence processOrderPersistence) {
		this.processOrderPersistence = processOrderPersistence;
	}

	/**
	 * Returns the process order finder.
	 *
	 * @return the process order finder
	 */
	public ProcessOrderFinder getProcessOrderFinder() {
		return processOrderFinder;
	}

	/**
	 * Sets the process order finder.
	 *
	 * @param processOrderFinder the process order finder
	 */
	public void setProcessOrderFinder(ProcessOrderFinder processOrderFinder) {
		this.processOrderFinder = processOrderFinder;
	}

	/**
	 * Returns the process workflow local service.
	 *
	 * @return the process workflow local service
	 */
	public org.opencps.processmgt.service.ProcessWorkflowLocalService getProcessWorkflowLocalService() {
		return processWorkflowLocalService;
	}

	/**
	 * Sets the process workflow local service.
	 *
	 * @param processWorkflowLocalService the process workflow local service
	 */
	public void setProcessWorkflowLocalService(
		org.opencps.processmgt.service.ProcessWorkflowLocalService processWorkflowLocalService) {
		this.processWorkflowLocalService = processWorkflowLocalService;
	}

	/**
	 * Returns the process workflow remote service.
	 *
	 * @return the process workflow remote service
	 */
	public org.opencps.processmgt.service.ProcessWorkflowService getProcessWorkflowService() {
		return processWorkflowService;
	}

	/**
	 * Sets the process workflow remote service.
	 *
	 * @param processWorkflowService the process workflow remote service
	 */
	public void setProcessWorkflowService(
		org.opencps.processmgt.service.ProcessWorkflowService processWorkflowService) {
		this.processWorkflowService = processWorkflowService;
	}

	/**
	 * Returns the process workflow persistence.
	 *
	 * @return the process workflow persistence
	 */
	public ProcessWorkflowPersistence getProcessWorkflowPersistence() {
		return processWorkflowPersistence;
	}

	/**
	 * Sets the process workflow persistence.
	 *
	 * @param processWorkflowPersistence the process workflow persistence
	 */
	public void setProcessWorkflowPersistence(
		ProcessWorkflowPersistence processWorkflowPersistence) {
		this.processWorkflowPersistence = processWorkflowPersistence;
	}

	/**
	 * Returns the process workflow finder.
	 *
	 * @return the process workflow finder
	 */
	public ProcessWorkflowFinder getProcessWorkflowFinder() {
		return processWorkflowFinder;
	}

	/**
	 * Sets the process workflow finder.
	 *
	 * @param processWorkflowFinder the process workflow finder
	 */
	public void setProcessWorkflowFinder(
		ProcessWorkflowFinder processWorkflowFinder) {
		this.processWorkflowFinder = processWorkflowFinder;
	}

	/**
	 * Returns the service info local service.
	 *
	 * @return the service info local service
	 */
	public org.opencps.servicemgt.service.ServiceInfoLocalService getServiceInfoLocalService() {
		return serviceInfoLocalService;
	}

	/**
	 * Sets the service info local service.
	 *
	 * @param serviceInfoLocalService the service info local service
	 */
	public void setServiceInfoLocalService(
		org.opencps.servicemgt.service.ServiceInfoLocalService serviceInfoLocalService) {
		this.serviceInfoLocalService = serviceInfoLocalService;
	}

	/**
	 * Returns the service info remote service.
	 *
	 * @return the service info remote service
	 */
	public org.opencps.servicemgt.service.ServiceInfoService getServiceInfoService() {
		return serviceInfoService;
	}

	/**
	 * Sets the service info remote service.
	 *
	 * @param serviceInfoService the service info remote service
	 */
	public void setServiceInfoService(
		org.opencps.servicemgt.service.ServiceInfoService serviceInfoService) {
		this.serviceInfoService = serviceInfoService;
	}

	/**
	 * Returns the service info persistence.
	 *
	 * @return the service info persistence
	 */
	public ServiceInfoPersistence getServiceInfoPersistence() {
		return serviceInfoPersistence;
	}

	/**
	 * Sets the service info persistence.
	 *
	 * @param serviceInfoPersistence the service info persistence
	 */
	public void setServiceInfoPersistence(
		ServiceInfoPersistence serviceInfoPersistence) {
		this.serviceInfoPersistence = serviceInfoPersistence;
	}

	/**
	 * Returns the service info finder.
	 *
	 * @return the service info finder
	 */
	public ServiceInfoFinder getServiceInfoFinder() {
		return serviceInfoFinder;
	}

	/**
	 * Sets the service info finder.
	 *
	 * @param serviceInfoFinder the service info finder
	 */
	public void setServiceInfoFinder(ServiceInfoFinder serviceInfoFinder) {
		this.serviceInfoFinder = serviceInfoFinder;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return ApiService.class;
	}

	protected String getModelClassName() {
		return ApiService.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = apiServicePersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = org.opencps.api.service.ApiServiceLocalService.class)
	protected org.opencps.api.service.ApiServiceLocalService apiServiceLocalService;
	@BeanReference(type = org.opencps.api.service.ApiServiceService.class)
	protected org.opencps.api.service.ApiServiceService apiServiceService;
	@BeanReference(type = ApiServicePersistence.class)
	protected ApiServicePersistence apiServicePersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@BeanReference(type = com.liferay.portlet.documentlibrary.service.DLAppLocalService.class)
	protected com.liferay.portlet.documentlibrary.service.DLAppLocalService dlAppLocalService;
	@BeanReference(type = com.liferay.portlet.documentlibrary.service.DLAppService.class)
	protected com.liferay.portlet.documentlibrary.service.DLAppService dlAppService;
	@BeanReference(type = com.liferay.portlet.documentlibrary.service.DLFileEntryLocalService.class)
	protected com.liferay.portlet.documentlibrary.service.DLFileEntryLocalService dlFileEntryLocalService;
	@BeanReference(type = com.liferay.portlet.documentlibrary.service.DLFileEntryService.class)
	protected com.liferay.portlet.documentlibrary.service.DLFileEntryService dlFileEntryService;
	@BeanReference(type = DLFileEntryPersistence.class)
	protected DLFileEntryPersistence dlFileEntryPersistence;
	@BeanReference(type = org.opencps.dossiermgt.service.DossierLocalService.class)
	protected org.opencps.dossiermgt.service.DossierLocalService dossierLocalService;
	@BeanReference(type = org.opencps.dossiermgt.service.DossierService.class)
	protected org.opencps.dossiermgt.service.DossierService dossierService;
	@BeanReference(type = DossierPersistence.class)
	protected DossierPersistence dossierPersistence;
	@BeanReference(type = DossierFinder.class)
	protected DossierFinder dossierFinder;
	@BeanReference(type = org.opencps.dossiermgt.service.DossierFileLocalService.class)
	protected org.opencps.dossiermgt.service.DossierFileLocalService dossierFileLocalService;
	@BeanReference(type = org.opencps.dossiermgt.service.DossierFileService.class)
	protected org.opencps.dossiermgt.service.DossierFileService dossierFileService;
	@BeanReference(type = DossierFilePersistence.class)
	protected DossierFilePersistence dossierFilePersistence;
	@BeanReference(type = DossierFileFinder.class)
	protected DossierFileFinder dossierFileFinder;
	@BeanReference(type = org.opencps.dossiermgt.service.DossierPartLocalService.class)
	protected org.opencps.dossiermgt.service.DossierPartLocalService dossierPartLocalService;
	@BeanReference(type = org.opencps.dossiermgt.service.DossierPartService.class)
	protected org.opencps.dossiermgt.service.DossierPartService dossierPartService;
	@BeanReference(type = DossierPartPersistence.class)
	protected DossierPartPersistence dossierPartPersistence;
	@BeanReference(type = org.opencps.processmgt.service.ProcessOrderLocalService.class)
	protected org.opencps.processmgt.service.ProcessOrderLocalService processOrderLocalService;
	@BeanReference(type = org.opencps.processmgt.service.ProcessOrderService.class)
	protected org.opencps.processmgt.service.ProcessOrderService processOrderService;
	@BeanReference(type = ProcessOrderPersistence.class)
	protected ProcessOrderPersistence processOrderPersistence;
	@BeanReference(type = ProcessOrderFinder.class)
	protected ProcessOrderFinder processOrderFinder;
	@BeanReference(type = org.opencps.processmgt.service.ProcessWorkflowLocalService.class)
	protected org.opencps.processmgt.service.ProcessWorkflowLocalService processWorkflowLocalService;
	@BeanReference(type = org.opencps.processmgt.service.ProcessWorkflowService.class)
	protected org.opencps.processmgt.service.ProcessWorkflowService processWorkflowService;
	@BeanReference(type = ProcessWorkflowPersistence.class)
	protected ProcessWorkflowPersistence processWorkflowPersistence;
	@BeanReference(type = ProcessWorkflowFinder.class)
	protected ProcessWorkflowFinder processWorkflowFinder;
	@BeanReference(type = org.opencps.servicemgt.service.ServiceInfoLocalService.class)
	protected org.opencps.servicemgt.service.ServiceInfoLocalService serviceInfoLocalService;
	@BeanReference(type = org.opencps.servicemgt.service.ServiceInfoService.class)
	protected org.opencps.servicemgt.service.ServiceInfoService serviceInfoService;
	@BeanReference(type = ServiceInfoPersistence.class)
	protected ServiceInfoPersistence serviceInfoPersistence;
	@BeanReference(type = ServiceInfoFinder.class)
	protected ServiceInfoFinder serviceInfoFinder;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private ApiServiceServiceClpInvoker _clpInvoker = new ApiServiceServiceClpInvoker();
}