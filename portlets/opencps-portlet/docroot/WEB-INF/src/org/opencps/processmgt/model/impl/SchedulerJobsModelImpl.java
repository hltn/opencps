/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.processmgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.opencps.processmgt.model.SchedulerJobs;
import org.opencps.processmgt.model.SchedulerJobsModel;
import org.opencps.processmgt.model.SchedulerJobsSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SchedulerJobs service. Represents a row in the &quot;opencps_scheduler_jobs&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.opencps.processmgt.model.SchedulerJobsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SchedulerJobsImpl}.
 * </p>
 *
 * @author khoavd
 * @see SchedulerJobsImpl
 * @see org.opencps.processmgt.model.SchedulerJobs
 * @see org.opencps.processmgt.model.SchedulerJobsModel
 * @generated
 */
@JSON(strict = true)
public class SchedulerJobsModelImpl extends BaseModelImpl<SchedulerJobs>
	implements SchedulerJobsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a scheduler jobs model instance should use the {@link org.opencps.processmgt.model.SchedulerJobs} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_scheduler_jobs";
	public static final Object[][] TABLE_COLUMNS = {
			{ "schedulerJobsId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "dossierId", Types.BIGINT },
			{ "fileGroupId", Types.BIGINT },
			{ "processWorkflowId", Types.BIGINT },
			{ "schedulerType", Types.INTEGER },
			{ "shedulerPattern", Types.VARCHAR },
			{ "status", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table opencps_scheduler_jobs (schedulerJobsId LONG not null primary key,createDate DATE null,modifiedDate DATE null,dossierId LONG,fileGroupId LONG,processWorkflowId LONG,schedulerType INTEGER,shedulerPattern VARCHAR(75) null,status INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table opencps_scheduler_jobs";
	public static final String ORDER_BY_JPQL = " ORDER BY schedulerJobs.schedulerJobsId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_scheduler_jobs.schedulerJobsId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.processmgt.model.SchedulerJobs"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.processmgt.model.SchedulerJobs"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.processmgt.model.SchedulerJobs"),
			true);
	public static long SCHEDULERTYPE_COLUMN_BITMASK = 1L;
	public static long SCHEDULERJOBSID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SchedulerJobs toModel(SchedulerJobsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SchedulerJobs model = new SchedulerJobsImpl();

		model.setSchedulerJobsId(soapModel.getSchedulerJobsId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setDossierId(soapModel.getDossierId());
		model.setFileGroupId(soapModel.getFileGroupId());
		model.setProcessWorkflowId(soapModel.getProcessWorkflowId());
		model.setSchedulerType(soapModel.getSchedulerType());
		model.setShedulerPattern(soapModel.getShedulerPattern());
		model.setStatus(soapModel.getStatus());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SchedulerJobs> toModels(SchedulerJobsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SchedulerJobs> models = new ArrayList<SchedulerJobs>(soapModels.length);

		for (SchedulerJobsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.opencps.processmgt.model.SchedulerJobs"));

	public SchedulerJobsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _schedulerJobsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSchedulerJobsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _schedulerJobsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SchedulerJobs.class;
	}

	@Override
	public String getModelClassName() {
		return SchedulerJobs.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("schedulerJobsId", getSchedulerJobsId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("dossierId", getDossierId());
		attributes.put("fileGroupId", getFileGroupId());
		attributes.put("processWorkflowId", getProcessWorkflowId());
		attributes.put("schedulerType", getSchedulerType());
		attributes.put("shedulerPattern", getShedulerPattern());
		attributes.put("status", getStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long schedulerJobsId = (Long)attributes.get("schedulerJobsId");

		if (schedulerJobsId != null) {
			setSchedulerJobsId(schedulerJobsId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long dossierId = (Long)attributes.get("dossierId");

		if (dossierId != null) {
			setDossierId(dossierId);
		}

		Long fileGroupId = (Long)attributes.get("fileGroupId");

		if (fileGroupId != null) {
			setFileGroupId(fileGroupId);
		}

		Long processWorkflowId = (Long)attributes.get("processWorkflowId");

		if (processWorkflowId != null) {
			setProcessWorkflowId(processWorkflowId);
		}

		Integer schedulerType = (Integer)attributes.get("schedulerType");

		if (schedulerType != null) {
			setSchedulerType(schedulerType);
		}

		String shedulerPattern = (String)attributes.get("shedulerPattern");

		if (shedulerPattern != null) {
			setShedulerPattern(shedulerPattern);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@JSON
	@Override
	public long getSchedulerJobsId() {
		return _schedulerJobsId;
	}

	@Override
	public void setSchedulerJobsId(long schedulerJobsId) {
		_schedulerJobsId = schedulerJobsId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getDossierId() {
		return _dossierId;
	}

	@Override
	public void setDossierId(long dossierId) {
		_dossierId = dossierId;
	}

	@JSON
	@Override
	public long getFileGroupId() {
		return _fileGroupId;
	}

	@Override
	public void setFileGroupId(long fileGroupId) {
		_fileGroupId = fileGroupId;
	}

	@JSON
	@Override
	public long getProcessWorkflowId() {
		return _processWorkflowId;
	}

	@Override
	public void setProcessWorkflowId(long processWorkflowId) {
		_processWorkflowId = processWorkflowId;
	}

	@JSON
	@Override
	public int getSchedulerType() {
		return _schedulerType;
	}

	@Override
	public void setSchedulerType(int schedulerType) {
		_columnBitmask |= SCHEDULERTYPE_COLUMN_BITMASK;

		if (!_setOriginalSchedulerType) {
			_setOriginalSchedulerType = true;

			_originalSchedulerType = _schedulerType;
		}

		_schedulerType = schedulerType;
	}

	public int getOriginalSchedulerType() {
		return _originalSchedulerType;
	}

	@JSON
	@Override
	public String getShedulerPattern() {
		if (_shedulerPattern == null) {
			return StringPool.BLANK;
		}
		else {
			return _shedulerPattern;
		}
	}

	@Override
	public void setShedulerPattern(String shedulerPattern) {
		_shedulerPattern = shedulerPattern;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SchedulerJobs.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SchedulerJobs toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SchedulerJobs)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SchedulerJobsImpl schedulerJobsImpl = new SchedulerJobsImpl();

		schedulerJobsImpl.setSchedulerJobsId(getSchedulerJobsId());
		schedulerJobsImpl.setCreateDate(getCreateDate());
		schedulerJobsImpl.setModifiedDate(getModifiedDate());
		schedulerJobsImpl.setDossierId(getDossierId());
		schedulerJobsImpl.setFileGroupId(getFileGroupId());
		schedulerJobsImpl.setProcessWorkflowId(getProcessWorkflowId());
		schedulerJobsImpl.setSchedulerType(getSchedulerType());
		schedulerJobsImpl.setShedulerPattern(getShedulerPattern());
		schedulerJobsImpl.setStatus(getStatus());

		schedulerJobsImpl.resetOriginalValues();

		return schedulerJobsImpl;
	}

	@Override
	public int compareTo(SchedulerJobs schedulerJobs) {
		long primaryKey = schedulerJobs.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SchedulerJobs)) {
			return false;
		}

		SchedulerJobs schedulerJobs = (SchedulerJobs)obj;

		long primaryKey = schedulerJobs.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SchedulerJobsModelImpl schedulerJobsModelImpl = this;

		schedulerJobsModelImpl._originalSchedulerType = schedulerJobsModelImpl._schedulerType;

		schedulerJobsModelImpl._setOriginalSchedulerType = false;

		schedulerJobsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SchedulerJobs> toCacheModel() {
		SchedulerJobsCacheModel schedulerJobsCacheModel = new SchedulerJobsCacheModel();

		schedulerJobsCacheModel.schedulerJobsId = getSchedulerJobsId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			schedulerJobsCacheModel.createDate = createDate.getTime();
		}
		else {
			schedulerJobsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			schedulerJobsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			schedulerJobsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		schedulerJobsCacheModel.dossierId = getDossierId();

		schedulerJobsCacheModel.fileGroupId = getFileGroupId();

		schedulerJobsCacheModel.processWorkflowId = getProcessWorkflowId();

		schedulerJobsCacheModel.schedulerType = getSchedulerType();

		schedulerJobsCacheModel.shedulerPattern = getShedulerPattern();

		String shedulerPattern = schedulerJobsCacheModel.shedulerPattern;

		if ((shedulerPattern != null) && (shedulerPattern.length() == 0)) {
			schedulerJobsCacheModel.shedulerPattern = null;
		}

		schedulerJobsCacheModel.status = getStatus();

		return schedulerJobsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{schedulerJobsId=");
		sb.append(getSchedulerJobsId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", dossierId=");
		sb.append(getDossierId());
		sb.append(", fileGroupId=");
		sb.append(getFileGroupId());
		sb.append(", processWorkflowId=");
		sb.append(getProcessWorkflowId());
		sb.append(", schedulerType=");
		sb.append(getSchedulerType());
		sb.append(", shedulerPattern=");
		sb.append(getShedulerPattern());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("org.opencps.processmgt.model.SchedulerJobs");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>schedulerJobsId</column-name><column-value><![CDATA[");
		sb.append(getSchedulerJobsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierId</column-name><column-value><![CDATA[");
		sb.append(getDossierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileGroupId</column-name><column-value><![CDATA[");
		sb.append(getFileGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processWorkflowId</column-name><column-value><![CDATA[");
		sb.append(getProcessWorkflowId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>schedulerType</column-name><column-value><![CDATA[");
		sb.append(getSchedulerType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shedulerPattern</column-name><column-value><![CDATA[");
		sb.append(getShedulerPattern());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SchedulerJobs.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SchedulerJobs.class
		};
	private long _schedulerJobsId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _dossierId;
	private long _fileGroupId;
	private long _processWorkflowId;
	private int _schedulerType;
	private int _originalSchedulerType;
	private boolean _setOriginalSchedulerType;
	private String _shedulerPattern;
	private int _status;
	private long _columnBitmask;
	private SchedulerJobs _escapedModel;
}