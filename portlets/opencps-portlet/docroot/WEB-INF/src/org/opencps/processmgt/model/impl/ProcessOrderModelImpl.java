/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.processmgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.opencps.processmgt.model.ProcessOrder;
import org.opencps.processmgt.model.ProcessOrderModel;
import org.opencps.processmgt.model.ProcessOrderSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ProcessOrder service. Represents a row in the &quot;opencps_processorder&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.opencps.processmgt.model.ProcessOrderModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProcessOrderImpl}.
 * </p>
 *
 * @author khoavd
 * @see ProcessOrderImpl
 * @see org.opencps.processmgt.model.ProcessOrder
 * @see org.opencps.processmgt.model.ProcessOrderModel
 * @generated
 */
@JSON(strict = true)
public class ProcessOrderModelImpl extends BaseModelImpl<ProcessOrder>
	implements ProcessOrderModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a process order model instance should use the {@link org.opencps.processmgt.model.ProcessOrder} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_processorder";
	public static final Object[][] TABLE_COLUMNS = {
			{ "processOrderId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "serviceInfoId", Types.BIGINT },
			{ "dossierTemplateId", Types.BIGINT },
			{ "govAgencyCode", Types.VARCHAR },
			{ "govAgencyName", Types.VARCHAR },
			{ "govAgencyOrganizationId", Types.BIGINT },
			{ "serviceProcessId", Types.BIGINT },
			{ "dossierId", Types.BIGINT },
			{ "fileGroupId", Types.BIGINT },
			{ "processStepId", Types.BIGINT },
			{ "actionUserId", Types.BIGINT },
			{ "actionDatetime", Types.TIMESTAMP },
			{ "actionNote", Types.VARCHAR },
			{ "assignToUserId", Types.BIGINT },
			{ "processWorkflowId", Types.BIGINT },
			{ "dossierStatus", Types.VARCHAR },
			{ "errorInfo", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table opencps_processorder (processOrderId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,serviceInfoId LONG,dossierTemplateId LONG,govAgencyCode VARCHAR(75) null,govAgencyName VARCHAR(75) null,govAgencyOrganizationId LONG,serviceProcessId LONG,dossierId LONG,fileGroupId LONG,processStepId LONG,actionUserId LONG,actionDatetime DATE null,actionNote VARCHAR(75) null,assignToUserId LONG,processWorkflowId LONG,dossierStatus VARCHAR(75) null,errorInfo VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_processorder";
	public static final String ORDER_BY_JPQL = " ORDER BY processOrder.processOrderId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_processorder.processOrderId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.processmgt.model.ProcessOrder"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.processmgt.model.ProcessOrder"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.processmgt.model.ProcessOrder"),
			true);
	public static long DOSSIERID_COLUMN_BITMASK = 1L;
	public static long FILEGROUPID_COLUMN_BITMASK = 2L;
	public static long PROCESSSTEPID_COLUMN_BITMASK = 4L;
	public static long SERVICEINFOID_COLUMN_BITMASK = 8L;
	public static long PROCESSORDERID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ProcessOrder toModel(ProcessOrderSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ProcessOrder model = new ProcessOrderImpl();

		model.setProcessOrderId(soapModel.getProcessOrderId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setServiceInfoId(soapModel.getServiceInfoId());
		model.setDossierTemplateId(soapModel.getDossierTemplateId());
		model.setGovAgencyCode(soapModel.getGovAgencyCode());
		model.setGovAgencyName(soapModel.getGovAgencyName());
		model.setGovAgencyOrganizationId(soapModel.getGovAgencyOrganizationId());
		model.setServiceProcessId(soapModel.getServiceProcessId());
		model.setDossierId(soapModel.getDossierId());
		model.setFileGroupId(soapModel.getFileGroupId());
		model.setProcessStepId(soapModel.getProcessStepId());
		model.setActionUserId(soapModel.getActionUserId());
		model.setActionDatetime(soapModel.getActionDatetime());
		model.setActionNote(soapModel.getActionNote());
		model.setAssignToUserId(soapModel.getAssignToUserId());
		model.setProcessWorkflowId(soapModel.getProcessWorkflowId());
		model.setDossierStatus(soapModel.getDossierStatus());
		model.setErrorInfo(soapModel.getErrorInfo());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ProcessOrder> toModels(ProcessOrderSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ProcessOrder> models = new ArrayList<ProcessOrder>(soapModels.length);

		for (ProcessOrderSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.opencps.processmgt.model.ProcessOrder"));

	public ProcessOrderModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _processOrderId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setProcessOrderId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _processOrderId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ProcessOrder.class;
	}

	@Override
	public String getModelClassName() {
		return ProcessOrder.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("processOrderId", getProcessOrderId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("serviceInfoId", getServiceInfoId());
		attributes.put("dossierTemplateId", getDossierTemplateId());
		attributes.put("govAgencyCode", getGovAgencyCode());
		attributes.put("govAgencyName", getGovAgencyName());
		attributes.put("govAgencyOrganizationId", getGovAgencyOrganizationId());
		attributes.put("serviceProcessId", getServiceProcessId());
		attributes.put("dossierId", getDossierId());
		attributes.put("fileGroupId", getFileGroupId());
		attributes.put("processStepId", getProcessStepId());
		attributes.put("actionUserId", getActionUserId());
		attributes.put("actionDatetime", getActionDatetime());
		attributes.put("actionNote", getActionNote());
		attributes.put("assignToUserId", getAssignToUserId());
		attributes.put("processWorkflowId", getProcessWorkflowId());
		attributes.put("dossierStatus", getDossierStatus());
		attributes.put("errorInfo", getErrorInfo());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long processOrderId = (Long)attributes.get("processOrderId");

		if (processOrderId != null) {
			setProcessOrderId(processOrderId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long serviceInfoId = (Long)attributes.get("serviceInfoId");

		if (serviceInfoId != null) {
			setServiceInfoId(serviceInfoId);
		}

		Long dossierTemplateId = (Long)attributes.get("dossierTemplateId");

		if (dossierTemplateId != null) {
			setDossierTemplateId(dossierTemplateId);
		}

		String govAgencyCode = (String)attributes.get("govAgencyCode");

		if (govAgencyCode != null) {
			setGovAgencyCode(govAgencyCode);
		}

		String govAgencyName = (String)attributes.get("govAgencyName");

		if (govAgencyName != null) {
			setGovAgencyName(govAgencyName);
		}

		Long govAgencyOrganizationId = (Long)attributes.get(
				"govAgencyOrganizationId");

		if (govAgencyOrganizationId != null) {
			setGovAgencyOrganizationId(govAgencyOrganizationId);
		}

		Long serviceProcessId = (Long)attributes.get("serviceProcessId");

		if (serviceProcessId != null) {
			setServiceProcessId(serviceProcessId);
		}

		Long dossierId = (Long)attributes.get("dossierId");

		if (dossierId != null) {
			setDossierId(dossierId);
		}

		Long fileGroupId = (Long)attributes.get("fileGroupId");

		if (fileGroupId != null) {
			setFileGroupId(fileGroupId);
		}

		Long processStepId = (Long)attributes.get("processStepId");

		if (processStepId != null) {
			setProcessStepId(processStepId);
		}

		Long actionUserId = (Long)attributes.get("actionUserId");

		if (actionUserId != null) {
			setActionUserId(actionUserId);
		}

		Date actionDatetime = (Date)attributes.get("actionDatetime");

		if (actionDatetime != null) {
			setActionDatetime(actionDatetime);
		}

		String actionNote = (String)attributes.get("actionNote");

		if (actionNote != null) {
			setActionNote(actionNote);
		}

		Long assignToUserId = (Long)attributes.get("assignToUserId");

		if (assignToUserId != null) {
			setAssignToUserId(assignToUserId);
		}

		Long processWorkflowId = (Long)attributes.get("processWorkflowId");

		if (processWorkflowId != null) {
			setProcessWorkflowId(processWorkflowId);
		}

		String dossierStatus = (String)attributes.get("dossierStatus");

		if (dossierStatus != null) {
			setDossierStatus(dossierStatus);
		}

		String errorInfo = (String)attributes.get("errorInfo");

		if (errorInfo != null) {
			setErrorInfo(errorInfo);
		}
	}

	@JSON
	@Override
	public long getProcessOrderId() {
		return _processOrderId;
	}

	@Override
	public void setProcessOrderId(long processOrderId) {
		_processOrderId = processOrderId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getServiceInfoId() {
		return _serviceInfoId;
	}

	@Override
	public void setServiceInfoId(long serviceInfoId) {
		_columnBitmask |= SERVICEINFOID_COLUMN_BITMASK;

		if (!_setOriginalServiceInfoId) {
			_setOriginalServiceInfoId = true;

			_originalServiceInfoId = _serviceInfoId;
		}

		_serviceInfoId = serviceInfoId;
	}

	public long getOriginalServiceInfoId() {
		return _originalServiceInfoId;
	}

	@JSON
	@Override
	public long getDossierTemplateId() {
		return _dossierTemplateId;
	}

	@Override
	public void setDossierTemplateId(long dossierTemplateId) {
		_dossierTemplateId = dossierTemplateId;
	}

	@JSON
	@Override
	public String getGovAgencyCode() {
		if (_govAgencyCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyCode;
		}
	}

	@Override
	public void setGovAgencyCode(String govAgencyCode) {
		_govAgencyCode = govAgencyCode;
	}

	@JSON
	@Override
	public String getGovAgencyName() {
		if (_govAgencyName == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyName;
		}
	}

	@Override
	public void setGovAgencyName(String govAgencyName) {
		_govAgencyName = govAgencyName;
	}

	@JSON
	@Override
	public long getGovAgencyOrganizationId() {
		return _govAgencyOrganizationId;
	}

	@Override
	public void setGovAgencyOrganizationId(long govAgencyOrganizationId) {
		_govAgencyOrganizationId = govAgencyOrganizationId;
	}

	@JSON
	@Override
	public long getServiceProcessId() {
		return _serviceProcessId;
	}

	@Override
	public void setServiceProcessId(long serviceProcessId) {
		_serviceProcessId = serviceProcessId;
	}

	@JSON
	@Override
	public long getDossierId() {
		return _dossierId;
	}

	@Override
	public void setDossierId(long dossierId) {
		_columnBitmask |= DOSSIERID_COLUMN_BITMASK;

		if (!_setOriginalDossierId) {
			_setOriginalDossierId = true;

			_originalDossierId = _dossierId;
		}

		_dossierId = dossierId;
	}

	public long getOriginalDossierId() {
		return _originalDossierId;
	}

	@JSON
	@Override
	public long getFileGroupId() {
		return _fileGroupId;
	}

	@Override
	public void setFileGroupId(long fileGroupId) {
		_columnBitmask |= FILEGROUPID_COLUMN_BITMASK;

		if (!_setOriginalFileGroupId) {
			_setOriginalFileGroupId = true;

			_originalFileGroupId = _fileGroupId;
		}

		_fileGroupId = fileGroupId;
	}

	public long getOriginalFileGroupId() {
		return _originalFileGroupId;
	}

	@JSON
	@Override
	public long getProcessStepId() {
		return _processStepId;
	}

	@Override
	public void setProcessStepId(long processStepId) {
		_columnBitmask |= PROCESSSTEPID_COLUMN_BITMASK;

		if (!_setOriginalProcessStepId) {
			_setOriginalProcessStepId = true;

			_originalProcessStepId = _processStepId;
		}

		_processStepId = processStepId;
	}

	public long getOriginalProcessStepId() {
		return _originalProcessStepId;
	}

	@JSON
	@Override
	public long getActionUserId() {
		return _actionUserId;
	}

	@Override
	public void setActionUserId(long actionUserId) {
		_actionUserId = actionUserId;
	}

	@Override
	public String getActionUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getActionUserId(), "uuid",
			_actionUserUuid);
	}

	@Override
	public void setActionUserUuid(String actionUserUuid) {
		_actionUserUuid = actionUserUuid;
	}

	@JSON
	@Override
	public Date getActionDatetime() {
		return _actionDatetime;
	}

	@Override
	public void setActionDatetime(Date actionDatetime) {
		_actionDatetime = actionDatetime;
	}

	@JSON
	@Override
	public String getActionNote() {
		if (_actionNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _actionNote;
		}
	}

	@Override
	public void setActionNote(String actionNote) {
		_actionNote = actionNote;
	}

	@JSON
	@Override
	public long getAssignToUserId() {
		return _assignToUserId;
	}

	@Override
	public void setAssignToUserId(long assignToUserId) {
		_assignToUserId = assignToUserId;
	}

	@Override
	public String getAssignToUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getAssignToUserId(), "uuid",
			_assignToUserUuid);
	}

	@Override
	public void setAssignToUserUuid(String assignToUserUuid) {
		_assignToUserUuid = assignToUserUuid;
	}

	@JSON
	@Override
	public long getProcessWorkflowId() {
		return _processWorkflowId;
	}

	@Override
	public void setProcessWorkflowId(long processWorkflowId) {
		_processWorkflowId = processWorkflowId;
	}

	@JSON
	@Override
	public String getDossierStatus() {
		if (_dossierStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierStatus;
		}
	}

	@Override
	public void setDossierStatus(String dossierStatus) {
		_dossierStatus = dossierStatus;
	}

	@JSON
	@Override
	public String getErrorInfo() {
		if (_errorInfo == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorInfo;
		}
	}

	@Override
	public void setErrorInfo(String errorInfo) {
		_errorInfo = errorInfo;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ProcessOrder.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ProcessOrder toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ProcessOrder)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProcessOrderImpl processOrderImpl = new ProcessOrderImpl();

		processOrderImpl.setProcessOrderId(getProcessOrderId());
		processOrderImpl.setCompanyId(getCompanyId());
		processOrderImpl.setGroupId(getGroupId());
		processOrderImpl.setUserId(getUserId());
		processOrderImpl.setCreateDate(getCreateDate());
		processOrderImpl.setModifiedDate(getModifiedDate());
		processOrderImpl.setServiceInfoId(getServiceInfoId());
		processOrderImpl.setDossierTemplateId(getDossierTemplateId());
		processOrderImpl.setGovAgencyCode(getGovAgencyCode());
		processOrderImpl.setGovAgencyName(getGovAgencyName());
		processOrderImpl.setGovAgencyOrganizationId(getGovAgencyOrganizationId());
		processOrderImpl.setServiceProcessId(getServiceProcessId());
		processOrderImpl.setDossierId(getDossierId());
		processOrderImpl.setFileGroupId(getFileGroupId());
		processOrderImpl.setProcessStepId(getProcessStepId());
		processOrderImpl.setActionUserId(getActionUserId());
		processOrderImpl.setActionDatetime(getActionDatetime());
		processOrderImpl.setActionNote(getActionNote());
		processOrderImpl.setAssignToUserId(getAssignToUserId());
		processOrderImpl.setProcessWorkflowId(getProcessWorkflowId());
		processOrderImpl.setDossierStatus(getDossierStatus());
		processOrderImpl.setErrorInfo(getErrorInfo());

		processOrderImpl.resetOriginalValues();

		return processOrderImpl;
	}

	@Override
	public int compareTo(ProcessOrder processOrder) {
		long primaryKey = processOrder.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ProcessOrder)) {
			return false;
		}

		ProcessOrder processOrder = (ProcessOrder)obj;

		long primaryKey = processOrder.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ProcessOrderModelImpl processOrderModelImpl = this;

		processOrderModelImpl._originalServiceInfoId = processOrderModelImpl._serviceInfoId;

		processOrderModelImpl._setOriginalServiceInfoId = false;

		processOrderModelImpl._originalDossierId = processOrderModelImpl._dossierId;

		processOrderModelImpl._setOriginalDossierId = false;

		processOrderModelImpl._originalFileGroupId = processOrderModelImpl._fileGroupId;

		processOrderModelImpl._setOriginalFileGroupId = false;

		processOrderModelImpl._originalProcessStepId = processOrderModelImpl._processStepId;

		processOrderModelImpl._setOriginalProcessStepId = false;

		processOrderModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ProcessOrder> toCacheModel() {
		ProcessOrderCacheModel processOrderCacheModel = new ProcessOrderCacheModel();

		processOrderCacheModel.processOrderId = getProcessOrderId();

		processOrderCacheModel.companyId = getCompanyId();

		processOrderCacheModel.groupId = getGroupId();

		processOrderCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			processOrderCacheModel.createDate = createDate.getTime();
		}
		else {
			processOrderCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			processOrderCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			processOrderCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		processOrderCacheModel.serviceInfoId = getServiceInfoId();

		processOrderCacheModel.dossierTemplateId = getDossierTemplateId();

		processOrderCacheModel.govAgencyCode = getGovAgencyCode();

		String govAgencyCode = processOrderCacheModel.govAgencyCode;

		if ((govAgencyCode != null) && (govAgencyCode.length() == 0)) {
			processOrderCacheModel.govAgencyCode = null;
		}

		processOrderCacheModel.govAgencyName = getGovAgencyName();

		String govAgencyName = processOrderCacheModel.govAgencyName;

		if ((govAgencyName != null) && (govAgencyName.length() == 0)) {
			processOrderCacheModel.govAgencyName = null;
		}

		processOrderCacheModel.govAgencyOrganizationId = getGovAgencyOrganizationId();

		processOrderCacheModel.serviceProcessId = getServiceProcessId();

		processOrderCacheModel.dossierId = getDossierId();

		processOrderCacheModel.fileGroupId = getFileGroupId();

		processOrderCacheModel.processStepId = getProcessStepId();

		processOrderCacheModel.actionUserId = getActionUserId();

		Date actionDatetime = getActionDatetime();

		if (actionDatetime != null) {
			processOrderCacheModel.actionDatetime = actionDatetime.getTime();
		}
		else {
			processOrderCacheModel.actionDatetime = Long.MIN_VALUE;
		}

		processOrderCacheModel.actionNote = getActionNote();

		String actionNote = processOrderCacheModel.actionNote;

		if ((actionNote != null) && (actionNote.length() == 0)) {
			processOrderCacheModel.actionNote = null;
		}

		processOrderCacheModel.assignToUserId = getAssignToUserId();

		processOrderCacheModel.processWorkflowId = getProcessWorkflowId();

		processOrderCacheModel.dossierStatus = getDossierStatus();

		String dossierStatus = processOrderCacheModel.dossierStatus;

		if ((dossierStatus != null) && (dossierStatus.length() == 0)) {
			processOrderCacheModel.dossierStatus = null;
		}

		processOrderCacheModel.errorInfo = getErrorInfo();

		String errorInfo = processOrderCacheModel.errorInfo;

		if ((errorInfo != null) && (errorInfo.length() == 0)) {
			processOrderCacheModel.errorInfo = null;
		}

		return processOrderCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{processOrderId=");
		sb.append(getProcessOrderId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", serviceInfoId=");
		sb.append(getServiceInfoId());
		sb.append(", dossierTemplateId=");
		sb.append(getDossierTemplateId());
		sb.append(", govAgencyCode=");
		sb.append(getGovAgencyCode());
		sb.append(", govAgencyName=");
		sb.append(getGovAgencyName());
		sb.append(", govAgencyOrganizationId=");
		sb.append(getGovAgencyOrganizationId());
		sb.append(", serviceProcessId=");
		sb.append(getServiceProcessId());
		sb.append(", dossierId=");
		sb.append(getDossierId());
		sb.append(", fileGroupId=");
		sb.append(getFileGroupId());
		sb.append(", processStepId=");
		sb.append(getProcessStepId());
		sb.append(", actionUserId=");
		sb.append(getActionUserId());
		sb.append(", actionDatetime=");
		sb.append(getActionDatetime());
		sb.append(", actionNote=");
		sb.append(getActionNote());
		sb.append(", assignToUserId=");
		sb.append(getAssignToUserId());
		sb.append(", processWorkflowId=");
		sb.append(getProcessWorkflowId());
		sb.append(", dossierStatus=");
		sb.append(getDossierStatus());
		sb.append(", errorInfo=");
		sb.append(getErrorInfo());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("org.opencps.processmgt.model.ProcessOrder");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>processOrderId</column-name><column-value><![CDATA[");
		sb.append(getProcessOrderId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceInfoId</column-name><column-value><![CDATA[");
		sb.append(getServiceInfoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierTemplateId</column-name><column-value><![CDATA[");
		sb.append(getDossierTemplateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyCode</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyName</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyOrganizationId</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceProcessId</column-name><column-value><![CDATA[");
		sb.append(getServiceProcessId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierId</column-name><column-value><![CDATA[");
		sb.append(getDossierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileGroupId</column-name><column-value><![CDATA[");
		sb.append(getFileGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processStepId</column-name><column-value><![CDATA[");
		sb.append(getProcessStepId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionUserId</column-name><column-value><![CDATA[");
		sb.append(getActionUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionDatetime</column-name><column-value><![CDATA[");
		sb.append(getActionDatetime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionNote</column-name><column-value><![CDATA[");
		sb.append(getActionNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assignToUserId</column-name><column-value><![CDATA[");
		sb.append(getAssignToUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processWorkflowId</column-name><column-value><![CDATA[");
		sb.append(getProcessWorkflowId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierStatus</column-name><column-value><![CDATA[");
		sb.append(getDossierStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorInfo</column-name><column-value><![CDATA[");
		sb.append(getErrorInfo());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ProcessOrder.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ProcessOrder.class
		};
	private long _processOrderId;
	private long _companyId;
	private long _groupId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private long _serviceInfoId;
	private long _originalServiceInfoId;
	private boolean _setOriginalServiceInfoId;
	private long _dossierTemplateId;
	private String _govAgencyCode;
	private String _govAgencyName;
	private long _govAgencyOrganizationId;
	private long _serviceProcessId;
	private long _dossierId;
	private long _originalDossierId;
	private boolean _setOriginalDossierId;
	private long _fileGroupId;
	private long _originalFileGroupId;
	private boolean _setOriginalFileGroupId;
	private long _processStepId;
	private long _originalProcessStepId;
	private boolean _setOriginalProcessStepId;
	private long _actionUserId;
	private String _actionUserUuid;
	private Date _actionDatetime;
	private String _actionNote;
	private long _assignToUserId;
	private String _assignToUserUuid;
	private long _processWorkflowId;
	private String _dossierStatus;
	private String _errorInfo;
	private long _columnBitmask;
	private ProcessOrder _escapedModel;
}