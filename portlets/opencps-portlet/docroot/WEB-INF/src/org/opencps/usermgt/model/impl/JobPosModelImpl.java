/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.usermgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.opencps.usermgt.model.JobPos;
import org.opencps.usermgt.model.JobPosModel;
import org.opencps.usermgt.model.JobPosSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the JobPos service. Represents a row in the &quot;opencps_jobpos&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.opencps.usermgt.model.JobPosModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link JobPosImpl}.
 * </p>
 *
 * @author khoavd
 * @see JobPosImpl
 * @see org.opencps.usermgt.model.JobPos
 * @see org.opencps.usermgt.model.JobPosModel
 * @generated
 */
@JSON(strict = true)
public class JobPosModelImpl extends BaseModelImpl<JobPos>
	implements JobPosModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a job pos model instance should use the {@link org.opencps.usermgt.model.JobPos} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_jobpos";
	public static final Object[][] TABLE_COLUMNS = {
			{ "jobPosId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "title", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "workingUnitId", Types.BIGINT },
			{ "directWorkingUnitId", Types.BIGINT },
			{ "leader", Types.INTEGER },
			{ "mappingRoleId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table opencps_jobpos (jobPosId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,title VARCHAR(255) null,description STRING null,workingUnitId LONG,directWorkingUnitId LONG,leader INTEGER,mappingRoleId LONG)";
	public static final String TABLE_SQL_DROP = "drop table opencps_jobpos";
	public static final String ORDER_BY_JPQL = " ORDER BY jobPos.jobPosId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_jobpos.jobPosId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.usermgt.model.JobPos"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.usermgt.model.JobPos"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.usermgt.model.JobPos"),
			true);
	public static long DIRECTWORKINGUNITID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long TITLE_COLUMN_BITMASK = 4L;
	public static long WORKINGUNITID_COLUMN_BITMASK = 8L;
	public static long JOBPOSID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static JobPos toModel(JobPosSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		JobPos model = new JobPosImpl();

		model.setJobPosId(soapModel.getJobPosId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTitle(soapModel.getTitle());
		model.setDescription(soapModel.getDescription());
		model.setWorkingUnitId(soapModel.getWorkingUnitId());
		model.setDirectWorkingUnitId(soapModel.getDirectWorkingUnitId());
		model.setLeader(soapModel.getLeader());
		model.setMappingRoleId(soapModel.getMappingRoleId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<JobPos> toModels(JobPosSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<JobPos> models = new ArrayList<JobPos>(soapModels.length);

		for (JobPosSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final String MAPPING_TABLE_OPENCPS_EMPLOYEE_JOBPOS_NAME = "opencps_employee_jobpos";
	public static final Object[][] MAPPING_TABLE_OPENCPS_EMPLOYEE_JOBPOS_COLUMNS =
		{
			{ "employeeId", Types.BIGINT },
			{ "jobPosId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_OPENCPS_EMPLOYEE_JOBPOS_SQL_CREATE = "create table opencps_employee_jobpos (employeeId LONG not null,jobPosId LONG not null,primary key (employeeId, jobPosId))";
	public static final boolean FINDER_CACHE_ENABLED_OPENCPS_EMPLOYEE_JOBPOS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.opencps_employee_jobpos"),
			true);
	public static final String MAPPING_TABLE_OPENCPS_WORKINGUNIT_JOBPOS_NAME = "opencps_workingunit_jobpos";
	public static final Object[][] MAPPING_TABLE_OPENCPS_WORKINGUNIT_JOBPOS_COLUMNS =
		{
			{ "jobPosId", Types.BIGINT },
			{ "workingunitId", Types.BIGINT }
		};
	public static final String MAPPING_TABLE_OPENCPS_WORKINGUNIT_JOBPOS_SQL_CREATE =
		"create table opencps_workingunit_jobpos (jobPosId LONG not null,workingunitId LONG not null,primary key (jobPosId, workingunitId))";
	public static final boolean FINDER_CACHE_ENABLED_OPENCPS_WORKINGUNIT_JOBPOS = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.opencps_workingunit_jobpos"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.opencps.usermgt.model.JobPos"));

	public JobPosModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _jobPosId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setJobPosId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _jobPosId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return JobPos.class;
	}

	@Override
	public String getModelClassName() {
		return JobPos.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("jobPosId", getJobPosId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("title", getTitle());
		attributes.put("description", getDescription());
		attributes.put("workingUnitId", getWorkingUnitId());
		attributes.put("directWorkingUnitId", getDirectWorkingUnitId());
		attributes.put("leader", getLeader());
		attributes.put("mappingRoleId", getMappingRoleId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long jobPosId = (Long)attributes.get("jobPosId");

		if (jobPosId != null) {
			setJobPosId(jobPosId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Long workingUnitId = (Long)attributes.get("workingUnitId");

		if (workingUnitId != null) {
			setWorkingUnitId(workingUnitId);
		}

		Long directWorkingUnitId = (Long)attributes.get("directWorkingUnitId");

		if (directWorkingUnitId != null) {
			setDirectWorkingUnitId(directWorkingUnitId);
		}

		Integer leader = (Integer)attributes.get("leader");

		if (leader != null) {
			setLeader(leader);
		}

		Long mappingRoleId = (Long)attributes.get("mappingRoleId");

		if (mappingRoleId != null) {
			setMappingRoleId(mappingRoleId);
		}
	}

	@JSON
	@Override
	public long getJobPosId() {
		return _jobPosId;
	}

	@Override
	public void setJobPosId(long jobPosId) {
		_jobPosId = jobPosId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_columnBitmask |= TITLE_COLUMN_BITMASK;

		if (_originalTitle == null) {
			_originalTitle = _title;
		}

		_title = title;
	}

	public String getOriginalTitle() {
		return GetterUtil.getString(_originalTitle);
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public long getWorkingUnitId() {
		return _workingUnitId;
	}

	@Override
	public void setWorkingUnitId(long workingUnitId) {
		_columnBitmask |= WORKINGUNITID_COLUMN_BITMASK;

		if (!_setOriginalWorkingUnitId) {
			_setOriginalWorkingUnitId = true;

			_originalWorkingUnitId = _workingUnitId;
		}

		_workingUnitId = workingUnitId;
	}

	public long getOriginalWorkingUnitId() {
		return _originalWorkingUnitId;
	}

	@JSON
	@Override
	public long getDirectWorkingUnitId() {
		return _directWorkingUnitId;
	}

	@Override
	public void setDirectWorkingUnitId(long directWorkingUnitId) {
		_columnBitmask |= DIRECTWORKINGUNITID_COLUMN_BITMASK;

		if (!_setOriginalDirectWorkingUnitId) {
			_setOriginalDirectWorkingUnitId = true;

			_originalDirectWorkingUnitId = _directWorkingUnitId;
		}

		_directWorkingUnitId = directWorkingUnitId;
	}

	public long getOriginalDirectWorkingUnitId() {
		return _originalDirectWorkingUnitId;
	}

	@JSON
	@Override
	public int getLeader() {
		return _leader;
	}

	@Override
	public void setLeader(int leader) {
		_leader = leader;
	}

	@JSON
	@Override
	public long getMappingRoleId() {
		return _mappingRoleId;
	}

	@Override
	public void setMappingRoleId(long mappingRoleId) {
		_mappingRoleId = mappingRoleId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			JobPos.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public JobPos toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (JobPos)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		JobPosImpl jobPosImpl = new JobPosImpl();

		jobPosImpl.setJobPosId(getJobPosId());
		jobPosImpl.setCompanyId(getCompanyId());
		jobPosImpl.setGroupId(getGroupId());
		jobPosImpl.setUserId(getUserId());
		jobPosImpl.setCreateDate(getCreateDate());
		jobPosImpl.setModifiedDate(getModifiedDate());
		jobPosImpl.setTitle(getTitle());
		jobPosImpl.setDescription(getDescription());
		jobPosImpl.setWorkingUnitId(getWorkingUnitId());
		jobPosImpl.setDirectWorkingUnitId(getDirectWorkingUnitId());
		jobPosImpl.setLeader(getLeader());
		jobPosImpl.setMappingRoleId(getMappingRoleId());

		jobPosImpl.resetOriginalValues();

		return jobPosImpl;
	}

	@Override
	public int compareTo(JobPos jobPos) {
		long primaryKey = jobPos.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof JobPos)) {
			return false;
		}

		JobPos jobPos = (JobPos)obj;

		long primaryKey = jobPos.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		JobPosModelImpl jobPosModelImpl = this;

		jobPosModelImpl._originalGroupId = jobPosModelImpl._groupId;

		jobPosModelImpl._setOriginalGroupId = false;

		jobPosModelImpl._originalTitle = jobPosModelImpl._title;

		jobPosModelImpl._originalWorkingUnitId = jobPosModelImpl._workingUnitId;

		jobPosModelImpl._setOriginalWorkingUnitId = false;

		jobPosModelImpl._originalDirectWorkingUnitId = jobPosModelImpl._directWorkingUnitId;

		jobPosModelImpl._setOriginalDirectWorkingUnitId = false;

		jobPosModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<JobPos> toCacheModel() {
		JobPosCacheModel jobPosCacheModel = new JobPosCacheModel();

		jobPosCacheModel.jobPosId = getJobPosId();

		jobPosCacheModel.companyId = getCompanyId();

		jobPosCacheModel.groupId = getGroupId();

		jobPosCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			jobPosCacheModel.createDate = createDate.getTime();
		}
		else {
			jobPosCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			jobPosCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			jobPosCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		jobPosCacheModel.title = getTitle();

		String title = jobPosCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			jobPosCacheModel.title = null;
		}

		jobPosCacheModel.description = getDescription();

		String description = jobPosCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			jobPosCacheModel.description = null;
		}

		jobPosCacheModel.workingUnitId = getWorkingUnitId();

		jobPosCacheModel.directWorkingUnitId = getDirectWorkingUnitId();

		jobPosCacheModel.leader = getLeader();

		jobPosCacheModel.mappingRoleId = getMappingRoleId();

		return jobPosCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{jobPosId=");
		sb.append(getJobPosId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", workingUnitId=");
		sb.append(getWorkingUnitId());
		sb.append(", directWorkingUnitId=");
		sb.append(getDirectWorkingUnitId());
		sb.append(", leader=");
		sb.append(getLeader());
		sb.append(", mappingRoleId=");
		sb.append(getMappingRoleId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("org.opencps.usermgt.model.JobPos");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>jobPosId</column-name><column-value><![CDATA[");
		sb.append(getJobPosId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workingUnitId</column-name><column-value><![CDATA[");
		sb.append(getWorkingUnitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>directWorkingUnitId</column-name><column-value><![CDATA[");
		sb.append(getDirectWorkingUnitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>leader</column-name><column-value><![CDATA[");
		sb.append(getLeader());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingRoleId</column-name><column-value><![CDATA[");
		sb.append(getMappingRoleId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = JobPos.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { JobPos.class };
	private long _jobPosId;
	private long _companyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private String _title;
	private String _originalTitle;
	private String _description;
	private long _workingUnitId;
	private long _originalWorkingUnitId;
	private boolean _setOriginalWorkingUnitId;
	private long _directWorkingUnitId;
	private long _originalDirectWorkingUnitId;
	private boolean _setOriginalDirectWorkingUnitId;
	private int _leader;
	private long _mappingRoleId;
	private long _columnBitmask;
	private JobPos _escapedModel;
}