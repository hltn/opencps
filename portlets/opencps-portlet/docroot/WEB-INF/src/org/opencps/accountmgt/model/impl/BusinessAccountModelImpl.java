/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.accountmgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.opencps.accountmgt.model.BusinessAccount;
import org.opencps.accountmgt.model.BusinessAccountModel;
import org.opencps.accountmgt.model.BusinessAccountSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the BusinessAccount service. Represents a row in the &quot;opencps_acc_business_account&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.opencps.accountmgt.model.BusinessAccountModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BusinessAccountImpl}.
 * </p>
 *
 * @author khoavd
 * @see BusinessAccountImpl
 * @see org.opencps.accountmgt.model.BusinessAccount
 * @see org.opencps.accountmgt.model.BusinessAccountModel
 * @generated
 */
@JSON(strict = true)
public class BusinessAccountModelImpl extends BaseModelImpl<BusinessAccount>
	implements BusinessAccountModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a business account model instance should use the {@link org.opencps.accountmgt.model.BusinessAccount} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_acc_business_account";
	public static final Object[][] TABLE_COLUMNS = {
			{ "businessAccountId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "businessId", Types.BIGINT },
			{ "fullName", Types.VARCHAR },
			{ "workingRole", Types.VARCHAR },
			{ "telNo", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "mappingUserId", Types.BIGINT },
			{ "hasPermissions", Types.VARCHAR },
			{ "accountStatus", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table opencps_acc_business_account (businessAccountId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,businessId LONG,fullName VARCHAR(75) null,workingRole VARCHAR(75) null,telNo VARCHAR(75) null,email VARCHAR(75) null,mappingUserId LONG,hasPermissions VARCHAR(75) null,accountStatus INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table opencps_acc_business_account";
	public static final String ORDER_BY_JPQL = " ORDER BY businessAccount.fullName ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_acc_business_account.fullName ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.accountmgt.model.BusinessAccount"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.accountmgt.model.BusinessAccount"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.accountmgt.model.BusinessAccount"),
			true);
	public static long BUSINESSID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long FULLNAME_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static BusinessAccount toModel(BusinessAccountSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		BusinessAccount model = new BusinessAccountImpl();

		model.setBusinessAccountId(soapModel.getBusinessAccountId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setBusinessId(soapModel.getBusinessId());
		model.setFullName(soapModel.getFullName());
		model.setWorkingRole(soapModel.getWorkingRole());
		model.setTelNo(soapModel.getTelNo());
		model.setEmail(soapModel.getEmail());
		model.setMappingUserId(soapModel.getMappingUserId());
		model.setHasPermissions(soapModel.getHasPermissions());
		model.setAccountStatus(soapModel.getAccountStatus());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<BusinessAccount> toModels(
		BusinessAccountSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<BusinessAccount> models = new ArrayList<BusinessAccount>(soapModels.length);

		for (BusinessAccountSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.opencps.accountmgt.model.BusinessAccount"));

	public BusinessAccountModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _businessAccountId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBusinessAccountId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _businessAccountId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BusinessAccount.class;
	}

	@Override
	public String getModelClassName() {
		return BusinessAccount.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("businessAccountId", getBusinessAccountId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("businessId", getBusinessId());
		attributes.put("fullName", getFullName());
		attributes.put("workingRole", getWorkingRole());
		attributes.put("telNo", getTelNo());
		attributes.put("email", getEmail());
		attributes.put("mappingUserId", getMappingUserId());
		attributes.put("hasPermissions", getHasPermissions());
		attributes.put("accountStatus", getAccountStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long businessAccountId = (Long)attributes.get("businessAccountId");

		if (businessAccountId != null) {
			setBusinessAccountId(businessAccountId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long businessId = (Long)attributes.get("businessId");

		if (businessId != null) {
			setBusinessId(businessId);
		}

		String fullName = (String)attributes.get("fullName");

		if (fullName != null) {
			setFullName(fullName);
		}

		String workingRole = (String)attributes.get("workingRole");

		if (workingRole != null) {
			setWorkingRole(workingRole);
		}

		String telNo = (String)attributes.get("telNo");

		if (telNo != null) {
			setTelNo(telNo);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		Long mappingUserId = (Long)attributes.get("mappingUserId");

		if (mappingUserId != null) {
			setMappingUserId(mappingUserId);
		}

		String hasPermissions = (String)attributes.get("hasPermissions");

		if (hasPermissions != null) {
			setHasPermissions(hasPermissions);
		}

		Integer accountStatus = (Integer)attributes.get("accountStatus");

		if (accountStatus != null) {
			setAccountStatus(accountStatus);
		}
	}

	@JSON
	@Override
	public long getBusinessAccountId() {
		return _businessAccountId;
	}

	@Override
	public void setBusinessAccountId(long businessAccountId) {
		_businessAccountId = businessAccountId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getBusinessId() {
		return _businessId;
	}

	@Override
	public void setBusinessId(long businessId) {
		_columnBitmask |= BUSINESSID_COLUMN_BITMASK;

		if (!_setOriginalBusinessId) {
			_setOriginalBusinessId = true;

			_originalBusinessId = _businessId;
		}

		_businessId = businessId;
	}

	public long getOriginalBusinessId() {
		return _originalBusinessId;
	}

	@JSON
	@Override
	public String getFullName() {
		if (_fullName == null) {
			return StringPool.BLANK;
		}
		else {
			return _fullName;
		}
	}

	@Override
	public void setFullName(String fullName) {
		_columnBitmask = -1L;

		_fullName = fullName;
	}

	@JSON
	@Override
	public String getWorkingRole() {
		if (_workingRole == null) {
			return StringPool.BLANK;
		}
		else {
			return _workingRole;
		}
	}

	@Override
	public void setWorkingRole(String workingRole) {
		_workingRole = workingRole;
	}

	@JSON
	@Override
	public String getTelNo() {
		if (_telNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _telNo;
		}
	}

	@Override
	public void setTelNo(String telNo) {
		_telNo = telNo;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@JSON
	@Override
	public long getMappingUserId() {
		return _mappingUserId;
	}

	@Override
	public void setMappingUserId(long mappingUserId) {
		_mappingUserId = mappingUserId;
	}

	@Override
	public String getMappingUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getMappingUserId(), "uuid",
			_mappingUserUuid);
	}

	@Override
	public void setMappingUserUuid(String mappingUserUuid) {
		_mappingUserUuid = mappingUserUuid;
	}

	@JSON
	@Override
	public String getHasPermissions() {
		if (_hasPermissions == null) {
			return StringPool.BLANK;
		}
		else {
			return _hasPermissions;
		}
	}

	@Override
	public void setHasPermissions(String hasPermissions) {
		_hasPermissions = hasPermissions;
	}

	@JSON
	@Override
	public int getAccountStatus() {
		return _accountStatus;
	}

	@Override
	public void setAccountStatus(int accountStatus) {
		_accountStatus = accountStatus;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			BusinessAccount.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BusinessAccount toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BusinessAccount)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BusinessAccountImpl businessAccountImpl = new BusinessAccountImpl();

		businessAccountImpl.setBusinessAccountId(getBusinessAccountId());
		businessAccountImpl.setCompanyId(getCompanyId());
		businessAccountImpl.setGroupId(getGroupId());
		businessAccountImpl.setUserId(getUserId());
		businessAccountImpl.setCreateDate(getCreateDate());
		businessAccountImpl.setModifiedDate(getModifiedDate());
		businessAccountImpl.setBusinessId(getBusinessId());
		businessAccountImpl.setFullName(getFullName());
		businessAccountImpl.setWorkingRole(getWorkingRole());
		businessAccountImpl.setTelNo(getTelNo());
		businessAccountImpl.setEmail(getEmail());
		businessAccountImpl.setMappingUserId(getMappingUserId());
		businessAccountImpl.setHasPermissions(getHasPermissions());
		businessAccountImpl.setAccountStatus(getAccountStatus());

		businessAccountImpl.resetOriginalValues();

		return businessAccountImpl;
	}

	@Override
	public int compareTo(BusinessAccount businessAccount) {
		int value = 0;

		value = getFullName().compareTo(businessAccount.getFullName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BusinessAccount)) {
			return false;
		}

		BusinessAccount businessAccount = (BusinessAccount)obj;

		long primaryKey = businessAccount.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		BusinessAccountModelImpl businessAccountModelImpl = this;

		businessAccountModelImpl._originalGroupId = businessAccountModelImpl._groupId;

		businessAccountModelImpl._setOriginalGroupId = false;

		businessAccountModelImpl._originalBusinessId = businessAccountModelImpl._businessId;

		businessAccountModelImpl._setOriginalBusinessId = false;

		businessAccountModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BusinessAccount> toCacheModel() {
		BusinessAccountCacheModel businessAccountCacheModel = new BusinessAccountCacheModel();

		businessAccountCacheModel.businessAccountId = getBusinessAccountId();

		businessAccountCacheModel.companyId = getCompanyId();

		businessAccountCacheModel.groupId = getGroupId();

		businessAccountCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			businessAccountCacheModel.createDate = createDate.getTime();
		}
		else {
			businessAccountCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			businessAccountCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			businessAccountCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		businessAccountCacheModel.businessId = getBusinessId();

		businessAccountCacheModel.fullName = getFullName();

		String fullName = businessAccountCacheModel.fullName;

		if ((fullName != null) && (fullName.length() == 0)) {
			businessAccountCacheModel.fullName = null;
		}

		businessAccountCacheModel.workingRole = getWorkingRole();

		String workingRole = businessAccountCacheModel.workingRole;

		if ((workingRole != null) && (workingRole.length() == 0)) {
			businessAccountCacheModel.workingRole = null;
		}

		businessAccountCacheModel.telNo = getTelNo();

		String telNo = businessAccountCacheModel.telNo;

		if ((telNo != null) && (telNo.length() == 0)) {
			businessAccountCacheModel.telNo = null;
		}

		businessAccountCacheModel.email = getEmail();

		String email = businessAccountCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			businessAccountCacheModel.email = null;
		}

		businessAccountCacheModel.mappingUserId = getMappingUserId();

		businessAccountCacheModel.hasPermissions = getHasPermissions();

		String hasPermissions = businessAccountCacheModel.hasPermissions;

		if ((hasPermissions != null) && (hasPermissions.length() == 0)) {
			businessAccountCacheModel.hasPermissions = null;
		}

		businessAccountCacheModel.accountStatus = getAccountStatus();

		return businessAccountCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{businessAccountId=");
		sb.append(getBusinessAccountId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", businessId=");
		sb.append(getBusinessId());
		sb.append(", fullName=");
		sb.append(getFullName());
		sb.append(", workingRole=");
		sb.append(getWorkingRole());
		sb.append(", telNo=");
		sb.append(getTelNo());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", mappingUserId=");
		sb.append(getMappingUserId());
		sb.append(", hasPermissions=");
		sb.append(getHasPermissions());
		sb.append(", accountStatus=");
		sb.append(getAccountStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("org.opencps.accountmgt.model.BusinessAccount");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>businessAccountId</column-name><column-value><![CDATA[");
		sb.append(getBusinessAccountId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>businessId</column-name><column-value><![CDATA[");
		sb.append(getBusinessId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fullName</column-name><column-value><![CDATA[");
		sb.append(getFullName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workingRole</column-name><column-value><![CDATA[");
		sb.append(getWorkingRole());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telNo</column-name><column-value><![CDATA[");
		sb.append(getTelNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingUserId</column-name><column-value><![CDATA[");
		sb.append(getMappingUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hasPermissions</column-name><column-value><![CDATA[");
		sb.append(getHasPermissions());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountStatus</column-name><column-value><![CDATA[");
		sb.append(getAccountStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BusinessAccount.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			BusinessAccount.class
		};
	private long _businessAccountId;
	private long _companyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private long _businessId;
	private long _originalBusinessId;
	private boolean _setOriginalBusinessId;
	private String _fullName;
	private String _workingRole;
	private String _telNo;
	private String _email;
	private long _mappingUserId;
	private String _mappingUserUuid;
	private String _hasPermissions;
	private int _accountStatus;
	private long _columnBitmask;
	private BusinessAccount _escapedModel;
}