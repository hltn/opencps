/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.opencps.dossiermgt.model.Dossier;
import org.opencps.dossiermgt.model.DossierModel;
import org.opencps.dossiermgt.model.DossierSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Dossier service. Represents a row in the &quot;opencps_dossier&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.opencps.dossiermgt.model.DossierModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DossierImpl}.
 * </p>
 *
 * @author trungnt
 * @see DossierImpl
 * @see org.opencps.dossiermgt.model.Dossier
 * @see org.opencps.dossiermgt.model.DossierModel
 * @generated
 */
@JSON(strict = true)
public class DossierModelImpl extends BaseModelImpl<Dossier>
	implements DossierModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dossier model instance should use the {@link org.opencps.dossiermgt.model.Dossier} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_dossier";
	public static final Object[][] TABLE_COLUMNS = {
			{ "dossierId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "oid", Types.VARCHAR },
			{ "externalRefNo", Types.VARCHAR },
			{ "externalRefUrl", Types.VARCHAR },
			{ "ownerOrganizationId", Types.BIGINT },
			{ "serviceConfigId", Types.BIGINT },
			{ "serviceInfoId", Types.BIGINT },
			{ "serviceDomainIndex", Types.VARCHAR },
			{ "serviceAdministrationIndex", Types.VARCHAR },
			{ "dossierTemplateId", Types.BIGINT },
			{ "govAgencyCode", Types.VARCHAR },
			{ "govAgencyName", Types.VARCHAR },
			{ "govAgencyOrganizationId", Types.BIGINT },
			{ "serviceMode", Types.INTEGER },
			{ "counter", Types.INTEGER },
			{ "subjectId", Types.VARCHAR },
			{ "subjectName", Types.VARCHAR },
			{ "address", Types.VARCHAR },
			{ "cityCode", Types.VARCHAR },
			{ "cityName", Types.VARCHAR },
			{ "districtCode", Types.VARCHAR },
			{ "districtName", Types.VARCHAR },
			{ "wardCode", Types.VARCHAR },
			{ "wardName", Types.VARCHAR },
			{ "contactName", Types.VARCHAR },
			{ "contactTelNo", Types.VARCHAR },
			{ "contactEmail", Types.VARCHAR },
			{ "note", Types.VARCHAR },
			{ "submitDatetime", Types.TIMESTAMP },
			{ "receiveDatetime", Types.TIMESTAMP },
			{ "receptionNo", Types.VARCHAR },
			{ "estimateDatetime", Types.TIMESTAMP },
			{ "finishDatetime", Types.TIMESTAMP },
			{ "dossierStatus", Types.VARCHAR },
			{ "dossierSource", Types.INTEGER },
			{ "keypayRedirectUrl", Types.VARCHAR },
			{ "delayStatus", Types.INTEGER },
			{ "folderId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table opencps_dossier (dossierId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,oid VARCHAR(75) null,externalRefNo VARCHAR(75) null,externalRefUrl STRING null,ownerOrganizationId LONG,serviceConfigId LONG,serviceInfoId LONG,serviceDomainIndex VARCHAR(75) null,serviceAdministrationIndex VARCHAR(75) null,dossierTemplateId LONG,govAgencyCode VARCHAR(75) null,govAgencyName VARCHAR(255) null,govAgencyOrganizationId LONG,serviceMode INTEGER,counter INTEGER,subjectId VARCHAR(100) null,subjectName VARCHAR(255) null,address VARCHAR(500) null,cityCode VARCHAR(75) null,cityName VARCHAR(255) null,districtCode VARCHAR(75) null,districtName VARCHAR(255) null,wardCode VARCHAR(75) null,wardName VARCHAR(255) null,contactName VARCHAR(255) null,contactTelNo VARCHAR(100) null,contactEmail VARCHAR(255) null,note VARCHAR(1000) null,submitDatetime DATE null,receiveDatetime DATE null,receptionNo VARCHAR(75) null,estimateDatetime DATE null,finishDatetime DATE null,dossierStatus VARCHAR(75) null,dossierSource INTEGER,keypayRedirectUrl VARCHAR(75) null,delayStatus INTEGER,folderId LONG)";
	public static final String TABLE_SQL_DROP = "drop table opencps_dossier";
	public static final String ORDER_BY_JPQL = " ORDER BY dossier.modifiedDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_dossier.modifiedDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.dossiermgt.model.Dossier"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.dossiermgt.model.Dossier"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.dossiermgt.model.Dossier"),
			true);
	public static long DELAYSTATUS_COLUMN_BITMASK = 1L;
	public static long DOSSIERSTATUS_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long OID_COLUMN_BITMASK = 8L;
	public static long RECEPTIONNO_COLUMN_BITMASK = 16L;
	public static long SERVICEINFOID_COLUMN_BITMASK = 32L;
	public static long USERID_COLUMN_BITMASK = 64L;
	public static long MODIFIEDDATE_COLUMN_BITMASK = 128L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Dossier toModel(DossierSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Dossier model = new DossierImpl();

		model.setDossierId(soapModel.getDossierId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setOid(soapModel.getOid());
		model.setExternalRefNo(soapModel.getExternalRefNo());
		model.setExternalRefUrl(soapModel.getExternalRefUrl());
		model.setOwnerOrganizationId(soapModel.getOwnerOrganizationId());
		model.setServiceConfigId(soapModel.getServiceConfigId());
		model.setServiceInfoId(soapModel.getServiceInfoId());
		model.setServiceDomainIndex(soapModel.getServiceDomainIndex());
		model.setServiceAdministrationIndex(soapModel.getServiceAdministrationIndex());
		model.setDossierTemplateId(soapModel.getDossierTemplateId());
		model.setGovAgencyCode(soapModel.getGovAgencyCode());
		model.setGovAgencyName(soapModel.getGovAgencyName());
		model.setGovAgencyOrganizationId(soapModel.getGovAgencyOrganizationId());
		model.setServiceMode(soapModel.getServiceMode());
		model.setCounter(soapModel.getCounter());
		model.setSubjectId(soapModel.getSubjectId());
		model.setSubjectName(soapModel.getSubjectName());
		model.setAddress(soapModel.getAddress());
		model.setCityCode(soapModel.getCityCode());
		model.setCityName(soapModel.getCityName());
		model.setDistrictCode(soapModel.getDistrictCode());
		model.setDistrictName(soapModel.getDistrictName());
		model.setWardCode(soapModel.getWardCode());
		model.setWardName(soapModel.getWardName());
		model.setContactName(soapModel.getContactName());
		model.setContactTelNo(soapModel.getContactTelNo());
		model.setContactEmail(soapModel.getContactEmail());
		model.setNote(soapModel.getNote());
		model.setSubmitDatetime(soapModel.getSubmitDatetime());
		model.setReceiveDatetime(soapModel.getReceiveDatetime());
		model.setReceptionNo(soapModel.getReceptionNo());
		model.setEstimateDatetime(soapModel.getEstimateDatetime());
		model.setFinishDatetime(soapModel.getFinishDatetime());
		model.setDossierStatus(soapModel.getDossierStatus());
		model.setDossierSource(soapModel.getDossierSource());
		model.setKeypayRedirectUrl(soapModel.getKeypayRedirectUrl());
		model.setDelayStatus(soapModel.getDelayStatus());
		model.setFolderId(soapModel.getFolderId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Dossier> toModels(DossierSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Dossier> models = new ArrayList<Dossier>(soapModels.length);

		for (DossierSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.opencps.dossiermgt.model.Dossier"));

	public DossierModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _dossierId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDossierId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _dossierId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Dossier.class;
	}

	@Override
	public String getModelClassName() {
		return Dossier.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("dossierId", getDossierId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("oid", getOid());
		attributes.put("externalRefNo", getExternalRefNo());
		attributes.put("externalRefUrl", getExternalRefUrl());
		attributes.put("ownerOrganizationId", getOwnerOrganizationId());
		attributes.put("serviceConfigId", getServiceConfigId());
		attributes.put("serviceInfoId", getServiceInfoId());
		attributes.put("serviceDomainIndex", getServiceDomainIndex());
		attributes.put("serviceAdministrationIndex",
			getServiceAdministrationIndex());
		attributes.put("dossierTemplateId", getDossierTemplateId());
		attributes.put("govAgencyCode", getGovAgencyCode());
		attributes.put("govAgencyName", getGovAgencyName());
		attributes.put("govAgencyOrganizationId", getGovAgencyOrganizationId());
		attributes.put("serviceMode", getServiceMode());
		attributes.put("counter", getCounter());
		attributes.put("subjectId", getSubjectId());
		attributes.put("subjectName", getSubjectName());
		attributes.put("address", getAddress());
		attributes.put("cityCode", getCityCode());
		attributes.put("cityName", getCityName());
		attributes.put("districtCode", getDistrictCode());
		attributes.put("districtName", getDistrictName());
		attributes.put("wardCode", getWardCode());
		attributes.put("wardName", getWardName());
		attributes.put("contactName", getContactName());
		attributes.put("contactTelNo", getContactTelNo());
		attributes.put("contactEmail", getContactEmail());
		attributes.put("note", getNote());
		attributes.put("submitDatetime", getSubmitDatetime());
		attributes.put("receiveDatetime", getReceiveDatetime());
		attributes.put("receptionNo", getReceptionNo());
		attributes.put("estimateDatetime", getEstimateDatetime());
		attributes.put("finishDatetime", getFinishDatetime());
		attributes.put("dossierStatus", getDossierStatus());
		attributes.put("dossierSource", getDossierSource());
		attributes.put("keypayRedirectUrl", getKeypayRedirectUrl());
		attributes.put("delayStatus", getDelayStatus());
		attributes.put("folderId", getFolderId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long dossierId = (Long)attributes.get("dossierId");

		if (dossierId != null) {
			setDossierId(dossierId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String oid = (String)attributes.get("oid");

		if (oid != null) {
			setOid(oid);
		}

		String externalRefNo = (String)attributes.get("externalRefNo");

		if (externalRefNo != null) {
			setExternalRefNo(externalRefNo);
		}

		String externalRefUrl = (String)attributes.get("externalRefUrl");

		if (externalRefUrl != null) {
			setExternalRefUrl(externalRefUrl);
		}

		Long ownerOrganizationId = (Long)attributes.get("ownerOrganizationId");

		if (ownerOrganizationId != null) {
			setOwnerOrganizationId(ownerOrganizationId);
		}

		Long serviceConfigId = (Long)attributes.get("serviceConfigId");

		if (serviceConfigId != null) {
			setServiceConfigId(serviceConfigId);
		}

		Long serviceInfoId = (Long)attributes.get("serviceInfoId");

		if (serviceInfoId != null) {
			setServiceInfoId(serviceInfoId);
		}

		String serviceDomainIndex = (String)attributes.get("serviceDomainIndex");

		if (serviceDomainIndex != null) {
			setServiceDomainIndex(serviceDomainIndex);
		}

		String serviceAdministrationIndex = (String)attributes.get(
				"serviceAdministrationIndex");

		if (serviceAdministrationIndex != null) {
			setServiceAdministrationIndex(serviceAdministrationIndex);
		}

		Long dossierTemplateId = (Long)attributes.get("dossierTemplateId");

		if (dossierTemplateId != null) {
			setDossierTemplateId(dossierTemplateId);
		}

		String govAgencyCode = (String)attributes.get("govAgencyCode");

		if (govAgencyCode != null) {
			setGovAgencyCode(govAgencyCode);
		}

		String govAgencyName = (String)attributes.get("govAgencyName");

		if (govAgencyName != null) {
			setGovAgencyName(govAgencyName);
		}

		Long govAgencyOrganizationId = (Long)attributes.get(
				"govAgencyOrganizationId");

		if (govAgencyOrganizationId != null) {
			setGovAgencyOrganizationId(govAgencyOrganizationId);
		}

		Integer serviceMode = (Integer)attributes.get("serviceMode");

		if (serviceMode != null) {
			setServiceMode(serviceMode);
		}

		Integer counter = (Integer)attributes.get("counter");

		if (counter != null) {
			setCounter(counter);
		}

		String subjectId = (String)attributes.get("subjectId");

		if (subjectId != null) {
			setSubjectId(subjectId);
		}

		String subjectName = (String)attributes.get("subjectName");

		if (subjectName != null) {
			setSubjectName(subjectName);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String cityCode = (String)attributes.get("cityCode");

		if (cityCode != null) {
			setCityCode(cityCode);
		}

		String cityName = (String)attributes.get("cityName");

		if (cityName != null) {
			setCityName(cityName);
		}

		String districtCode = (String)attributes.get("districtCode");

		if (districtCode != null) {
			setDistrictCode(districtCode);
		}

		String districtName = (String)attributes.get("districtName");

		if (districtName != null) {
			setDistrictName(districtName);
		}

		String wardCode = (String)attributes.get("wardCode");

		if (wardCode != null) {
			setWardCode(wardCode);
		}

		String wardName = (String)attributes.get("wardName");

		if (wardName != null) {
			setWardName(wardName);
		}

		String contactName = (String)attributes.get("contactName");

		if (contactName != null) {
			setContactName(contactName);
		}

		String contactTelNo = (String)attributes.get("contactTelNo");

		if (contactTelNo != null) {
			setContactTelNo(contactTelNo);
		}

		String contactEmail = (String)attributes.get("contactEmail");

		if (contactEmail != null) {
			setContactEmail(contactEmail);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		Date submitDatetime = (Date)attributes.get("submitDatetime");

		if (submitDatetime != null) {
			setSubmitDatetime(submitDatetime);
		}

		Date receiveDatetime = (Date)attributes.get("receiveDatetime");

		if (receiveDatetime != null) {
			setReceiveDatetime(receiveDatetime);
		}

		String receptionNo = (String)attributes.get("receptionNo");

		if (receptionNo != null) {
			setReceptionNo(receptionNo);
		}

		Date estimateDatetime = (Date)attributes.get("estimateDatetime");

		if (estimateDatetime != null) {
			setEstimateDatetime(estimateDatetime);
		}

		Date finishDatetime = (Date)attributes.get("finishDatetime");

		if (finishDatetime != null) {
			setFinishDatetime(finishDatetime);
		}

		String dossierStatus = (String)attributes.get("dossierStatus");

		if (dossierStatus != null) {
			setDossierStatus(dossierStatus);
		}

		Integer dossierSource = (Integer)attributes.get("dossierSource");

		if (dossierSource != null) {
			setDossierSource(dossierSource);
		}

		String keypayRedirectUrl = (String)attributes.get("keypayRedirectUrl");

		if (keypayRedirectUrl != null) {
			setKeypayRedirectUrl(keypayRedirectUrl);
		}

		Integer delayStatus = (Integer)attributes.get("delayStatus");

		if (delayStatus != null) {
			setDelayStatus(delayStatus);
		}

		Long folderId = (Long)attributes.get("folderId");

		if (folderId != null) {
			setFolderId(folderId);
		}
	}

	@JSON
	@Override
	public long getDossierId() {
		return _dossierId;
	}

	@Override
	public void setDossierId(long dossierId) {
		_dossierId = dossierId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_columnBitmask = -1L;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getOid() {
		if (_oid == null) {
			return StringPool.BLANK;
		}
		else {
			return _oid;
		}
	}

	@Override
	public void setOid(String oid) {
		_columnBitmask |= OID_COLUMN_BITMASK;

		if (_originalOid == null) {
			_originalOid = _oid;
		}

		_oid = oid;
	}

	public String getOriginalOid() {
		return GetterUtil.getString(_originalOid);
	}

	@JSON
	@Override
	public String getExternalRefNo() {
		if (_externalRefNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _externalRefNo;
		}
	}

	@Override
	public void setExternalRefNo(String externalRefNo) {
		_externalRefNo = externalRefNo;
	}

	@JSON
	@Override
	public String getExternalRefUrl() {
		if (_externalRefUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _externalRefUrl;
		}
	}

	@Override
	public void setExternalRefUrl(String externalRefUrl) {
		_externalRefUrl = externalRefUrl;
	}

	@JSON
	@Override
	public long getOwnerOrganizationId() {
		return _ownerOrganizationId;
	}

	@Override
	public void setOwnerOrganizationId(long ownerOrganizationId) {
		_ownerOrganizationId = ownerOrganizationId;
	}

	@JSON
	@Override
	public long getServiceConfigId() {
		return _serviceConfigId;
	}

	@Override
	public void setServiceConfigId(long serviceConfigId) {
		_serviceConfigId = serviceConfigId;
	}

	@JSON
	@Override
	public long getServiceInfoId() {
		return _serviceInfoId;
	}

	@Override
	public void setServiceInfoId(long serviceInfoId) {
		_columnBitmask |= SERVICEINFOID_COLUMN_BITMASK;

		if (!_setOriginalServiceInfoId) {
			_setOriginalServiceInfoId = true;

			_originalServiceInfoId = _serviceInfoId;
		}

		_serviceInfoId = serviceInfoId;
	}

	public long getOriginalServiceInfoId() {
		return _originalServiceInfoId;
	}

	@JSON
	@Override
	public String getServiceDomainIndex() {
		if (_serviceDomainIndex == null) {
			return StringPool.BLANK;
		}
		else {
			return _serviceDomainIndex;
		}
	}

	@Override
	public void setServiceDomainIndex(String serviceDomainIndex) {
		_serviceDomainIndex = serviceDomainIndex;
	}

	@JSON
	@Override
	public String getServiceAdministrationIndex() {
		if (_serviceAdministrationIndex == null) {
			return StringPool.BLANK;
		}
		else {
			return _serviceAdministrationIndex;
		}
	}

	@Override
	public void setServiceAdministrationIndex(String serviceAdministrationIndex) {
		_serviceAdministrationIndex = serviceAdministrationIndex;
	}

	@JSON
	@Override
	public long getDossierTemplateId() {
		return _dossierTemplateId;
	}

	@Override
	public void setDossierTemplateId(long dossierTemplateId) {
		_dossierTemplateId = dossierTemplateId;
	}

	@JSON
	@Override
	public String getGovAgencyCode() {
		if (_govAgencyCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyCode;
		}
	}

	@Override
	public void setGovAgencyCode(String govAgencyCode) {
		_govAgencyCode = govAgencyCode;
	}

	@JSON
	@Override
	public String getGovAgencyName() {
		if (_govAgencyName == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyName;
		}
	}

	@Override
	public void setGovAgencyName(String govAgencyName) {
		_govAgencyName = govAgencyName;
	}

	@JSON
	@Override
	public long getGovAgencyOrganizationId() {
		return _govAgencyOrganizationId;
	}

	@Override
	public void setGovAgencyOrganizationId(long govAgencyOrganizationId) {
		_govAgencyOrganizationId = govAgencyOrganizationId;
	}

	@JSON
	@Override
	public int getServiceMode() {
		return _serviceMode;
	}

	@Override
	public void setServiceMode(int serviceMode) {
		_serviceMode = serviceMode;
	}

	@JSON
	@Override
	public int getCounter() {
		return _counter;
	}

	@Override
	public void setCounter(int counter) {
		_counter = counter;
	}

	@JSON
	@Override
	public String getSubjectId() {
		if (_subjectId == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectId;
		}
	}

	@Override
	public void setSubjectId(String subjectId) {
		_subjectId = subjectId;
	}

	@JSON
	@Override
	public String getSubjectName() {
		if (_subjectName == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectName;
		}
	}

	@Override
	public void setSubjectName(String subjectName) {
		_subjectName = subjectName;
	}

	@JSON
	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@JSON
	@Override
	public String getCityCode() {
		if (_cityCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _cityCode;
		}
	}

	@Override
	public void setCityCode(String cityCode) {
		_cityCode = cityCode;
	}

	@JSON
	@Override
	public String getCityName() {
		if (_cityName == null) {
			return StringPool.BLANK;
		}
		else {
			return _cityName;
		}
	}

	@Override
	public void setCityName(String cityName) {
		_cityName = cityName;
	}

	@JSON
	@Override
	public String getDistrictCode() {
		if (_districtCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _districtCode;
		}
	}

	@Override
	public void setDistrictCode(String districtCode) {
		_districtCode = districtCode;
	}

	@JSON
	@Override
	public String getDistrictName() {
		if (_districtName == null) {
			return StringPool.BLANK;
		}
		else {
			return _districtName;
		}
	}

	@Override
	public void setDistrictName(String districtName) {
		_districtName = districtName;
	}

	@JSON
	@Override
	public String getWardCode() {
		if (_wardCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _wardCode;
		}
	}

	@Override
	public void setWardCode(String wardCode) {
		_wardCode = wardCode;
	}

	@JSON
	@Override
	public String getWardName() {
		if (_wardName == null) {
			return StringPool.BLANK;
		}
		else {
			return _wardName;
		}
	}

	@Override
	public void setWardName(String wardName) {
		_wardName = wardName;
	}

	@JSON
	@Override
	public String getContactName() {
		if (_contactName == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactName;
		}
	}

	@Override
	public void setContactName(String contactName) {
		_contactName = contactName;
	}

	@JSON
	@Override
	public String getContactTelNo() {
		if (_contactTelNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactTelNo;
		}
	}

	@Override
	public void setContactTelNo(String contactTelNo) {
		_contactTelNo = contactTelNo;
	}

	@JSON
	@Override
	public String getContactEmail() {
		if (_contactEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactEmail;
		}
	}

	@Override
	public void setContactEmail(String contactEmail) {
		_contactEmail = contactEmail;
	}

	@JSON
	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@JSON
	@Override
	public Date getSubmitDatetime() {
		return _submitDatetime;
	}

	@Override
	public void setSubmitDatetime(Date submitDatetime) {
		_submitDatetime = submitDatetime;
	}

	@JSON
	@Override
	public Date getReceiveDatetime() {
		return _receiveDatetime;
	}

	@Override
	public void setReceiveDatetime(Date receiveDatetime) {
		_receiveDatetime = receiveDatetime;
	}

	@JSON
	@Override
	public String getReceptionNo() {
		if (_receptionNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _receptionNo;
		}
	}

	@Override
	public void setReceptionNo(String receptionNo) {
		_columnBitmask |= RECEPTIONNO_COLUMN_BITMASK;

		if (_originalReceptionNo == null) {
			_originalReceptionNo = _receptionNo;
		}

		_receptionNo = receptionNo;
	}

	public String getOriginalReceptionNo() {
		return GetterUtil.getString(_originalReceptionNo);
	}

	@JSON
	@Override
	public Date getEstimateDatetime() {
		return _estimateDatetime;
	}

	@Override
	public void setEstimateDatetime(Date estimateDatetime) {
		_estimateDatetime = estimateDatetime;
	}

	@JSON
	@Override
	public Date getFinishDatetime() {
		return _finishDatetime;
	}

	@Override
	public void setFinishDatetime(Date finishDatetime) {
		_finishDatetime = finishDatetime;
	}

	@JSON
	@Override
	public String getDossierStatus() {
		if (_dossierStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierStatus;
		}
	}

	@Override
	public void setDossierStatus(String dossierStatus) {
		_columnBitmask |= DOSSIERSTATUS_COLUMN_BITMASK;

		if (_originalDossierStatus == null) {
			_originalDossierStatus = _dossierStatus;
		}

		_dossierStatus = dossierStatus;
	}

	public String getOriginalDossierStatus() {
		return GetterUtil.getString(_originalDossierStatus);
	}

	@JSON
	@Override
	public int getDossierSource() {
		return _dossierSource;
	}

	@Override
	public void setDossierSource(int dossierSource) {
		_dossierSource = dossierSource;
	}

	@JSON
	@Override
	public String getKeypayRedirectUrl() {
		if (_keypayRedirectUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _keypayRedirectUrl;
		}
	}

	@Override
	public void setKeypayRedirectUrl(String keypayRedirectUrl) {
		_keypayRedirectUrl = keypayRedirectUrl;
	}

	@JSON
	@Override
	public int getDelayStatus() {
		return _delayStatus;
	}

	@Override
	public void setDelayStatus(int delayStatus) {
		_columnBitmask |= DELAYSTATUS_COLUMN_BITMASK;

		if (!_setOriginalDelayStatus) {
			_setOriginalDelayStatus = true;

			_originalDelayStatus = _delayStatus;
		}

		_delayStatus = delayStatus;
	}

	public int getOriginalDelayStatus() {
		return _originalDelayStatus;
	}

	@JSON
	@Override
	public long getFolderId() {
		return _folderId;
	}

	@Override
	public void setFolderId(long folderId) {
		_folderId = folderId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Dossier.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Dossier toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Dossier)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DossierImpl dossierImpl = new DossierImpl();

		dossierImpl.setDossierId(getDossierId());
		dossierImpl.setCompanyId(getCompanyId());
		dossierImpl.setGroupId(getGroupId());
		dossierImpl.setUserId(getUserId());
		dossierImpl.setCreateDate(getCreateDate());
		dossierImpl.setModifiedDate(getModifiedDate());
		dossierImpl.setOid(getOid());
		dossierImpl.setExternalRefNo(getExternalRefNo());
		dossierImpl.setExternalRefUrl(getExternalRefUrl());
		dossierImpl.setOwnerOrganizationId(getOwnerOrganizationId());
		dossierImpl.setServiceConfigId(getServiceConfigId());
		dossierImpl.setServiceInfoId(getServiceInfoId());
		dossierImpl.setServiceDomainIndex(getServiceDomainIndex());
		dossierImpl.setServiceAdministrationIndex(getServiceAdministrationIndex());
		dossierImpl.setDossierTemplateId(getDossierTemplateId());
		dossierImpl.setGovAgencyCode(getGovAgencyCode());
		dossierImpl.setGovAgencyName(getGovAgencyName());
		dossierImpl.setGovAgencyOrganizationId(getGovAgencyOrganizationId());
		dossierImpl.setServiceMode(getServiceMode());
		dossierImpl.setCounter(getCounter());
		dossierImpl.setSubjectId(getSubjectId());
		dossierImpl.setSubjectName(getSubjectName());
		dossierImpl.setAddress(getAddress());
		dossierImpl.setCityCode(getCityCode());
		dossierImpl.setCityName(getCityName());
		dossierImpl.setDistrictCode(getDistrictCode());
		dossierImpl.setDistrictName(getDistrictName());
		dossierImpl.setWardCode(getWardCode());
		dossierImpl.setWardName(getWardName());
		dossierImpl.setContactName(getContactName());
		dossierImpl.setContactTelNo(getContactTelNo());
		dossierImpl.setContactEmail(getContactEmail());
		dossierImpl.setNote(getNote());
		dossierImpl.setSubmitDatetime(getSubmitDatetime());
		dossierImpl.setReceiveDatetime(getReceiveDatetime());
		dossierImpl.setReceptionNo(getReceptionNo());
		dossierImpl.setEstimateDatetime(getEstimateDatetime());
		dossierImpl.setFinishDatetime(getFinishDatetime());
		dossierImpl.setDossierStatus(getDossierStatus());
		dossierImpl.setDossierSource(getDossierSource());
		dossierImpl.setKeypayRedirectUrl(getKeypayRedirectUrl());
		dossierImpl.setDelayStatus(getDelayStatus());
		dossierImpl.setFolderId(getFolderId());

		dossierImpl.resetOriginalValues();

		return dossierImpl;
	}

	@Override
	public int compareTo(Dossier dossier) {
		int value = 0;

		value = DateUtil.compareTo(getModifiedDate(), dossier.getModifiedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Dossier)) {
			return false;
		}

		Dossier dossier = (Dossier)obj;

		long primaryKey = dossier.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DossierModelImpl dossierModelImpl = this;

		dossierModelImpl._originalGroupId = dossierModelImpl._groupId;

		dossierModelImpl._setOriginalGroupId = false;

		dossierModelImpl._originalUserId = dossierModelImpl._userId;

		dossierModelImpl._setOriginalUserId = false;

		dossierModelImpl._originalOid = dossierModelImpl._oid;

		dossierModelImpl._originalServiceInfoId = dossierModelImpl._serviceInfoId;

		dossierModelImpl._setOriginalServiceInfoId = false;

		dossierModelImpl._originalReceptionNo = dossierModelImpl._receptionNo;

		dossierModelImpl._originalDossierStatus = dossierModelImpl._dossierStatus;

		dossierModelImpl._originalDelayStatus = dossierModelImpl._delayStatus;

		dossierModelImpl._setOriginalDelayStatus = false;

		dossierModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Dossier> toCacheModel() {
		DossierCacheModel dossierCacheModel = new DossierCacheModel();

		dossierCacheModel.dossierId = getDossierId();

		dossierCacheModel.companyId = getCompanyId();

		dossierCacheModel.groupId = getGroupId();

		dossierCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			dossierCacheModel.createDate = createDate.getTime();
		}
		else {
			dossierCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			dossierCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			dossierCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		dossierCacheModel.oid = getOid();

		String oid = dossierCacheModel.oid;

		if ((oid != null) && (oid.length() == 0)) {
			dossierCacheModel.oid = null;
		}

		dossierCacheModel.externalRefNo = getExternalRefNo();

		String externalRefNo = dossierCacheModel.externalRefNo;

		if ((externalRefNo != null) && (externalRefNo.length() == 0)) {
			dossierCacheModel.externalRefNo = null;
		}

		dossierCacheModel.externalRefUrl = getExternalRefUrl();

		String externalRefUrl = dossierCacheModel.externalRefUrl;

		if ((externalRefUrl != null) && (externalRefUrl.length() == 0)) {
			dossierCacheModel.externalRefUrl = null;
		}

		dossierCacheModel.ownerOrganizationId = getOwnerOrganizationId();

		dossierCacheModel.serviceConfigId = getServiceConfigId();

		dossierCacheModel.serviceInfoId = getServiceInfoId();

		dossierCacheModel.serviceDomainIndex = getServiceDomainIndex();

		String serviceDomainIndex = dossierCacheModel.serviceDomainIndex;

		if ((serviceDomainIndex != null) && (serviceDomainIndex.length() == 0)) {
			dossierCacheModel.serviceDomainIndex = null;
		}

		dossierCacheModel.serviceAdministrationIndex = getServiceAdministrationIndex();

		String serviceAdministrationIndex = dossierCacheModel.serviceAdministrationIndex;

		if ((serviceAdministrationIndex != null) &&
				(serviceAdministrationIndex.length() == 0)) {
			dossierCacheModel.serviceAdministrationIndex = null;
		}

		dossierCacheModel.dossierTemplateId = getDossierTemplateId();

		dossierCacheModel.govAgencyCode = getGovAgencyCode();

		String govAgencyCode = dossierCacheModel.govAgencyCode;

		if ((govAgencyCode != null) && (govAgencyCode.length() == 0)) {
			dossierCacheModel.govAgencyCode = null;
		}

		dossierCacheModel.govAgencyName = getGovAgencyName();

		String govAgencyName = dossierCacheModel.govAgencyName;

		if ((govAgencyName != null) && (govAgencyName.length() == 0)) {
			dossierCacheModel.govAgencyName = null;
		}

		dossierCacheModel.govAgencyOrganizationId = getGovAgencyOrganizationId();

		dossierCacheModel.serviceMode = getServiceMode();

		dossierCacheModel.counter = getCounter();

		dossierCacheModel.subjectId = getSubjectId();

		String subjectId = dossierCacheModel.subjectId;

		if ((subjectId != null) && (subjectId.length() == 0)) {
			dossierCacheModel.subjectId = null;
		}

		dossierCacheModel.subjectName = getSubjectName();

		String subjectName = dossierCacheModel.subjectName;

		if ((subjectName != null) && (subjectName.length() == 0)) {
			dossierCacheModel.subjectName = null;
		}

		dossierCacheModel.address = getAddress();

		String address = dossierCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			dossierCacheModel.address = null;
		}

		dossierCacheModel.cityCode = getCityCode();

		String cityCode = dossierCacheModel.cityCode;

		if ((cityCode != null) && (cityCode.length() == 0)) {
			dossierCacheModel.cityCode = null;
		}

		dossierCacheModel.cityName = getCityName();

		String cityName = dossierCacheModel.cityName;

		if ((cityName != null) && (cityName.length() == 0)) {
			dossierCacheModel.cityName = null;
		}

		dossierCacheModel.districtCode = getDistrictCode();

		String districtCode = dossierCacheModel.districtCode;

		if ((districtCode != null) && (districtCode.length() == 0)) {
			dossierCacheModel.districtCode = null;
		}

		dossierCacheModel.districtName = getDistrictName();

		String districtName = dossierCacheModel.districtName;

		if ((districtName != null) && (districtName.length() == 0)) {
			dossierCacheModel.districtName = null;
		}

		dossierCacheModel.wardCode = getWardCode();

		String wardCode = dossierCacheModel.wardCode;

		if ((wardCode != null) && (wardCode.length() == 0)) {
			dossierCacheModel.wardCode = null;
		}

		dossierCacheModel.wardName = getWardName();

		String wardName = dossierCacheModel.wardName;

		if ((wardName != null) && (wardName.length() == 0)) {
			dossierCacheModel.wardName = null;
		}

		dossierCacheModel.contactName = getContactName();

		String contactName = dossierCacheModel.contactName;

		if ((contactName != null) && (contactName.length() == 0)) {
			dossierCacheModel.contactName = null;
		}

		dossierCacheModel.contactTelNo = getContactTelNo();

		String contactTelNo = dossierCacheModel.contactTelNo;

		if ((contactTelNo != null) && (contactTelNo.length() == 0)) {
			dossierCacheModel.contactTelNo = null;
		}

		dossierCacheModel.contactEmail = getContactEmail();

		String contactEmail = dossierCacheModel.contactEmail;

		if ((contactEmail != null) && (contactEmail.length() == 0)) {
			dossierCacheModel.contactEmail = null;
		}

		dossierCacheModel.note = getNote();

		String note = dossierCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			dossierCacheModel.note = null;
		}

		Date submitDatetime = getSubmitDatetime();

		if (submitDatetime != null) {
			dossierCacheModel.submitDatetime = submitDatetime.getTime();
		}
		else {
			dossierCacheModel.submitDatetime = Long.MIN_VALUE;
		}

		Date receiveDatetime = getReceiveDatetime();

		if (receiveDatetime != null) {
			dossierCacheModel.receiveDatetime = receiveDatetime.getTime();
		}
		else {
			dossierCacheModel.receiveDatetime = Long.MIN_VALUE;
		}

		dossierCacheModel.receptionNo = getReceptionNo();

		String receptionNo = dossierCacheModel.receptionNo;

		if ((receptionNo != null) && (receptionNo.length() == 0)) {
			dossierCacheModel.receptionNo = null;
		}

		Date estimateDatetime = getEstimateDatetime();

		if (estimateDatetime != null) {
			dossierCacheModel.estimateDatetime = estimateDatetime.getTime();
		}
		else {
			dossierCacheModel.estimateDatetime = Long.MIN_VALUE;
		}

		Date finishDatetime = getFinishDatetime();

		if (finishDatetime != null) {
			dossierCacheModel.finishDatetime = finishDatetime.getTime();
		}
		else {
			dossierCacheModel.finishDatetime = Long.MIN_VALUE;
		}

		dossierCacheModel.dossierStatus = getDossierStatus();

		String dossierStatus = dossierCacheModel.dossierStatus;

		if ((dossierStatus != null) && (dossierStatus.length() == 0)) {
			dossierCacheModel.dossierStatus = null;
		}

		dossierCacheModel.dossierSource = getDossierSource();

		dossierCacheModel.keypayRedirectUrl = getKeypayRedirectUrl();

		String keypayRedirectUrl = dossierCacheModel.keypayRedirectUrl;

		if ((keypayRedirectUrl != null) && (keypayRedirectUrl.length() == 0)) {
			dossierCacheModel.keypayRedirectUrl = null;
		}

		dossierCacheModel.delayStatus = getDelayStatus();

		dossierCacheModel.folderId = getFolderId();

		return dossierCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(87);

		sb.append("{dossierId=");
		sb.append(getDossierId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", oid=");
		sb.append(getOid());
		sb.append(", externalRefNo=");
		sb.append(getExternalRefNo());
		sb.append(", externalRefUrl=");
		sb.append(getExternalRefUrl());
		sb.append(", ownerOrganizationId=");
		sb.append(getOwnerOrganizationId());
		sb.append(", serviceConfigId=");
		sb.append(getServiceConfigId());
		sb.append(", serviceInfoId=");
		sb.append(getServiceInfoId());
		sb.append(", serviceDomainIndex=");
		sb.append(getServiceDomainIndex());
		sb.append(", serviceAdministrationIndex=");
		sb.append(getServiceAdministrationIndex());
		sb.append(", dossierTemplateId=");
		sb.append(getDossierTemplateId());
		sb.append(", govAgencyCode=");
		sb.append(getGovAgencyCode());
		sb.append(", govAgencyName=");
		sb.append(getGovAgencyName());
		sb.append(", govAgencyOrganizationId=");
		sb.append(getGovAgencyOrganizationId());
		sb.append(", serviceMode=");
		sb.append(getServiceMode());
		sb.append(", counter=");
		sb.append(getCounter());
		sb.append(", subjectId=");
		sb.append(getSubjectId());
		sb.append(", subjectName=");
		sb.append(getSubjectName());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", cityCode=");
		sb.append(getCityCode());
		sb.append(", cityName=");
		sb.append(getCityName());
		sb.append(", districtCode=");
		sb.append(getDistrictCode());
		sb.append(", districtName=");
		sb.append(getDistrictName());
		sb.append(", wardCode=");
		sb.append(getWardCode());
		sb.append(", wardName=");
		sb.append(getWardName());
		sb.append(", contactName=");
		sb.append(getContactName());
		sb.append(", contactTelNo=");
		sb.append(getContactTelNo());
		sb.append(", contactEmail=");
		sb.append(getContactEmail());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", submitDatetime=");
		sb.append(getSubmitDatetime());
		sb.append(", receiveDatetime=");
		sb.append(getReceiveDatetime());
		sb.append(", receptionNo=");
		sb.append(getReceptionNo());
		sb.append(", estimateDatetime=");
		sb.append(getEstimateDatetime());
		sb.append(", finishDatetime=");
		sb.append(getFinishDatetime());
		sb.append(", dossierStatus=");
		sb.append(getDossierStatus());
		sb.append(", dossierSource=");
		sb.append(getDossierSource());
		sb.append(", keypayRedirectUrl=");
		sb.append(getKeypayRedirectUrl());
		sb.append(", delayStatus=");
		sb.append(getDelayStatus());
		sb.append(", folderId=");
		sb.append(getFolderId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(133);

		sb.append("<model><model-name>");
		sb.append("org.opencps.dossiermgt.model.Dossier");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>dossierId</column-name><column-value><![CDATA[");
		sb.append(getDossierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oid</column-name><column-value><![CDATA[");
		sb.append(getOid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>externalRefNo</column-name><column-value><![CDATA[");
		sb.append(getExternalRefNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>externalRefUrl</column-name><column-value><![CDATA[");
		sb.append(getExternalRefUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ownerOrganizationId</column-name><column-value><![CDATA[");
		sb.append(getOwnerOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceConfigId</column-name><column-value><![CDATA[");
		sb.append(getServiceConfigId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceInfoId</column-name><column-value><![CDATA[");
		sb.append(getServiceInfoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceDomainIndex</column-name><column-value><![CDATA[");
		sb.append(getServiceDomainIndex());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceAdministrationIndex</column-name><column-value><![CDATA[");
		sb.append(getServiceAdministrationIndex());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierTemplateId</column-name><column-value><![CDATA[");
		sb.append(getDossierTemplateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyCode</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyName</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyOrganizationId</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceMode</column-name><column-value><![CDATA[");
		sb.append(getServiceMode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>counter</column-name><column-value><![CDATA[");
		sb.append(getCounter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectId</column-name><column-value><![CDATA[");
		sb.append(getSubjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectName</column-name><column-value><![CDATA[");
		sb.append(getSubjectName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cityCode</column-name><column-value><![CDATA[");
		sb.append(getCityCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cityName</column-name><column-value><![CDATA[");
		sb.append(getCityName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>districtCode</column-name><column-value><![CDATA[");
		sb.append(getDistrictCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>districtName</column-name><column-value><![CDATA[");
		sb.append(getDistrictName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wardCode</column-name><column-value><![CDATA[");
		sb.append(getWardCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wardName</column-name><column-value><![CDATA[");
		sb.append(getWardName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactName</column-name><column-value><![CDATA[");
		sb.append(getContactName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactTelNo</column-name><column-value><![CDATA[");
		sb.append(getContactTelNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactEmail</column-name><column-value><![CDATA[");
		sb.append(getContactEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>submitDatetime</column-name><column-value><![CDATA[");
		sb.append(getSubmitDatetime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>receiveDatetime</column-name><column-value><![CDATA[");
		sb.append(getReceiveDatetime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>receptionNo</column-name><column-value><![CDATA[");
		sb.append(getReceptionNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estimateDatetime</column-name><column-value><![CDATA[");
		sb.append(getEstimateDatetime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>finishDatetime</column-name><column-value><![CDATA[");
		sb.append(getFinishDatetime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierStatus</column-name><column-value><![CDATA[");
		sb.append(getDossierStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierSource</column-name><column-value><![CDATA[");
		sb.append(getDossierSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keypayRedirectUrl</column-name><column-value><![CDATA[");
		sb.append(getKeypayRedirectUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>delayStatus</column-name><column-value><![CDATA[");
		sb.append(getDelayStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>folderId</column-name><column-value><![CDATA[");
		sb.append(getFolderId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Dossier.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Dossier.class
		};
	private long _dossierId;
	private long _companyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private Date _createDate;
	private Date _modifiedDate;
	private String _oid;
	private String _originalOid;
	private String _externalRefNo;
	private String _externalRefUrl;
	private long _ownerOrganizationId;
	private long _serviceConfigId;
	private long _serviceInfoId;
	private long _originalServiceInfoId;
	private boolean _setOriginalServiceInfoId;
	private String _serviceDomainIndex;
	private String _serviceAdministrationIndex;
	private long _dossierTemplateId;
	private String _govAgencyCode;
	private String _govAgencyName;
	private long _govAgencyOrganizationId;
	private int _serviceMode;
	private int _counter;
	private String _subjectId;
	private String _subjectName;
	private String _address;
	private String _cityCode;
	private String _cityName;
	private String _districtCode;
	private String _districtName;
	private String _wardCode;
	private String _wardName;
	private String _contactName;
	private String _contactTelNo;
	private String _contactEmail;
	private String _note;
	private Date _submitDatetime;
	private Date _receiveDatetime;
	private String _receptionNo;
	private String _originalReceptionNo;
	private Date _estimateDatetime;
	private Date _finishDatetime;
	private String _dossierStatus;
	private String _originalDossierStatus;
	private int _dossierSource;
	private String _keypayRedirectUrl;
	private int _delayStatus;
	private int _originalDelayStatus;
	private boolean _setOriginalDelayStatus;
	private long _folderId;
	private long _columnBitmask;
	private Dossier _escapedModel;
}