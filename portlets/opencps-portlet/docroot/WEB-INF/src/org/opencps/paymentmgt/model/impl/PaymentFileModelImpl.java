/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.paymentmgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.opencps.paymentmgt.model.PaymentFile;
import org.opencps.paymentmgt.model.PaymentFileModel;
import org.opencps.paymentmgt.model.PaymentFileSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the PaymentFile service. Represents a row in the &quot;opencps_payment_file&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.opencps.paymentmgt.model.PaymentFileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PaymentFileImpl}.
 * </p>
 *
 * @author trungdk
 * @see PaymentFileImpl
 * @see org.opencps.paymentmgt.model.PaymentFile
 * @see org.opencps.paymentmgt.model.PaymentFileModel
 * @generated
 */
@JSON(strict = true)
public class PaymentFileModelImpl extends BaseModelImpl<PaymentFile>
	implements PaymentFileModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a Payment file model instance should use the {@link org.opencps.paymentmgt.model.PaymentFile} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_payment_file";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "paymentFileId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "dossierId", Types.BIGINT },
			{ "fileGroupId", Types.BIGINT },
			{ "ownerUserId", Types.BIGINT },
			{ "ownerOrganizationId", Types.BIGINT },
			{ "govAgencyOrganizationId", Types.BIGINT },
			{ "paymentName", Types.VARCHAR },
			{ "requestDatetime", Types.TIMESTAMP },
			{ "amount", Types.DOUBLE },
			{ "requestNote", Types.VARCHAR },
			{ "paymentOptions", Types.VARCHAR },
			{ "keypayUrl", Types.VARCHAR },
			{ "keypayTransactionId", Types.BIGINT },
			{ "keypayGoodCode", Types.VARCHAR },
			{ "keypayMerchantCode", Types.VARCHAR },
			{ "bankInfo", Types.VARCHAR },
			{ "placeInfo", Types.VARCHAR },
			{ "paymentStatus", Types.INTEGER },
			{ "paymentMethod", Types.INTEGER },
			{ "confirmDatetime", Types.TIMESTAMP },
			{ "confirmFileEntryId", Types.BIGINT },
			{ "approveDatetime", Types.TIMESTAMP },
			{ "accountUserName", Types.VARCHAR },
			{ "approveNote", Types.VARCHAR },
			{ "govAgencyTaxNo", Types.VARCHAR },
			{ "invoiceTemplateNo", Types.VARCHAR },
			{ "invoiceIssueNo", Types.VARCHAR },
			{ "invoiceNo", Types.VARCHAR },
			{ "syncStatus", Types.INTEGER },
			{ "oid", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table opencps_payment_file (uuid_ VARCHAR(75) null,paymentFileId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,dossierId LONG,fileGroupId LONG,ownerUserId LONG,ownerOrganizationId LONG,govAgencyOrganizationId LONG,paymentName VARCHAR(75) null,requestDatetime DATE null,amount DOUBLE,requestNote VARCHAR(75) null,paymentOptions VARCHAR(75) null,keypayUrl VARCHAR(75) null,keypayTransactionId LONG,keypayGoodCode VARCHAR(20) null,keypayMerchantCode VARCHAR(75) null,bankInfo VARCHAR(75) null,placeInfo VARCHAR(75) null,paymentStatus INTEGER,paymentMethod INTEGER,confirmDatetime DATE null,confirmFileEntryId LONG,approveDatetime DATE null,accountUserName VARCHAR(75) null,approveNote VARCHAR(75) null,govAgencyTaxNo VARCHAR(75) null,invoiceTemplateNo VARCHAR(75) null,invoiceIssueNo VARCHAR(75) null,invoiceNo VARCHAR(75) null,syncStatus INTEGER,oid VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_payment_file";
	public static final String ORDER_BY_JPQL = " ORDER BY paymentFile.paymentFileId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_payment_file.paymentFileId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.paymentmgt.model.PaymentFile"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.paymentmgt.model.PaymentFile"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.paymentmgt.model.PaymentFile"),
			true);
	public static long AMOUNT_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long DOSSIERID_COLUMN_BITMASK = 4L;
	public static long GROUPID_COLUMN_BITMASK = 8L;
	public static long KEYPAYGOODCODE_COLUMN_BITMASK = 16L;
	public static long KEYPAYTRANSACTIONID_COLUMN_BITMASK = 32L;
	public static long OID_COLUMN_BITMASK = 64L;
	public static long PAYMENTSTATUS_COLUMN_BITMASK = 128L;
	public static long UUID_COLUMN_BITMASK = 256L;
	public static long PAYMENTFILEID_COLUMN_BITMASK = 512L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static PaymentFile toModel(PaymentFileSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		PaymentFile model = new PaymentFileImpl();

		model.setUuid(soapModel.getUuid());
		model.setPaymentFileId(soapModel.getPaymentFileId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setDossierId(soapModel.getDossierId());
		model.setFileGroupId(soapModel.getFileGroupId());
		model.setOwnerUserId(soapModel.getOwnerUserId());
		model.setOwnerOrganizationId(soapModel.getOwnerOrganizationId());
		model.setGovAgencyOrganizationId(soapModel.getGovAgencyOrganizationId());
		model.setPaymentName(soapModel.getPaymentName());
		model.setRequestDatetime(soapModel.getRequestDatetime());
		model.setAmount(soapModel.getAmount());
		model.setRequestNote(soapModel.getRequestNote());
		model.setPaymentOptions(soapModel.getPaymentOptions());
		model.setKeypayUrl(soapModel.getKeypayUrl());
		model.setKeypayTransactionId(soapModel.getKeypayTransactionId());
		model.setKeypayGoodCode(soapModel.getKeypayGoodCode());
		model.setKeypayMerchantCode(soapModel.getKeypayMerchantCode());
		model.setBankInfo(soapModel.getBankInfo());
		model.setPlaceInfo(soapModel.getPlaceInfo());
		model.setPaymentStatus(soapModel.getPaymentStatus());
		model.setPaymentMethod(soapModel.getPaymentMethod());
		model.setConfirmDatetime(soapModel.getConfirmDatetime());
		model.setConfirmFileEntryId(soapModel.getConfirmFileEntryId());
		model.setApproveDatetime(soapModel.getApproveDatetime());
		model.setAccountUserName(soapModel.getAccountUserName());
		model.setApproveNote(soapModel.getApproveNote());
		model.setGovAgencyTaxNo(soapModel.getGovAgencyTaxNo());
		model.setInvoiceTemplateNo(soapModel.getInvoiceTemplateNo());
		model.setInvoiceIssueNo(soapModel.getInvoiceIssueNo());
		model.setInvoiceNo(soapModel.getInvoiceNo());
		model.setSyncStatus(soapModel.getSyncStatus());
		model.setOid(soapModel.getOid());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<PaymentFile> toModels(PaymentFileSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<PaymentFile> models = new ArrayList<PaymentFile>(soapModels.length);

		for (PaymentFileSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.opencps.paymentmgt.model.PaymentFile"));

	public PaymentFileModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _paymentFileId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPaymentFileId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _paymentFileId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PaymentFile.class;
	}

	@Override
	public String getModelClassName() {
		return PaymentFile.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("paymentFileId", getPaymentFileId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("dossierId", getDossierId());
		attributes.put("fileGroupId", getFileGroupId());
		attributes.put("ownerUserId", getOwnerUserId());
		attributes.put("ownerOrganizationId", getOwnerOrganizationId());
		attributes.put("govAgencyOrganizationId", getGovAgencyOrganizationId());
		attributes.put("paymentName", getPaymentName());
		attributes.put("requestDatetime", getRequestDatetime());
		attributes.put("amount", getAmount());
		attributes.put("requestNote", getRequestNote());
		attributes.put("paymentOptions", getPaymentOptions());
		attributes.put("keypayUrl", getKeypayUrl());
		attributes.put("keypayTransactionId", getKeypayTransactionId());
		attributes.put("keypayGoodCode", getKeypayGoodCode());
		attributes.put("keypayMerchantCode", getKeypayMerchantCode());
		attributes.put("bankInfo", getBankInfo());
		attributes.put("placeInfo", getPlaceInfo());
		attributes.put("paymentStatus", getPaymentStatus());
		attributes.put("paymentMethod", getPaymentMethod());
		attributes.put("confirmDatetime", getConfirmDatetime());
		attributes.put("confirmFileEntryId", getConfirmFileEntryId());
		attributes.put("approveDatetime", getApproveDatetime());
		attributes.put("accountUserName", getAccountUserName());
		attributes.put("approveNote", getApproveNote());
		attributes.put("govAgencyTaxNo", getGovAgencyTaxNo());
		attributes.put("invoiceTemplateNo", getInvoiceTemplateNo());
		attributes.put("invoiceIssueNo", getInvoiceIssueNo());
		attributes.put("invoiceNo", getInvoiceNo());
		attributes.put("syncStatus", getSyncStatus());
		attributes.put("oid", getOid());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long paymentFileId = (Long)attributes.get("paymentFileId");

		if (paymentFileId != null) {
			setPaymentFileId(paymentFileId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long dossierId = (Long)attributes.get("dossierId");

		if (dossierId != null) {
			setDossierId(dossierId);
		}

		Long fileGroupId = (Long)attributes.get("fileGroupId");

		if (fileGroupId != null) {
			setFileGroupId(fileGroupId);
		}

		Long ownerUserId = (Long)attributes.get("ownerUserId");

		if (ownerUserId != null) {
			setOwnerUserId(ownerUserId);
		}

		Long ownerOrganizationId = (Long)attributes.get("ownerOrganizationId");

		if (ownerOrganizationId != null) {
			setOwnerOrganizationId(ownerOrganizationId);
		}

		Long govAgencyOrganizationId = (Long)attributes.get(
				"govAgencyOrganizationId");

		if (govAgencyOrganizationId != null) {
			setGovAgencyOrganizationId(govAgencyOrganizationId);
		}

		String paymentName = (String)attributes.get("paymentName");

		if (paymentName != null) {
			setPaymentName(paymentName);
		}

		Date requestDatetime = (Date)attributes.get("requestDatetime");

		if (requestDatetime != null) {
			setRequestDatetime(requestDatetime);
		}

		Double amount = (Double)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		String requestNote = (String)attributes.get("requestNote");

		if (requestNote != null) {
			setRequestNote(requestNote);
		}

		String paymentOptions = (String)attributes.get("paymentOptions");

		if (paymentOptions != null) {
			setPaymentOptions(paymentOptions);
		}

		String keypayUrl = (String)attributes.get("keypayUrl");

		if (keypayUrl != null) {
			setKeypayUrl(keypayUrl);
		}

		Long keypayTransactionId = (Long)attributes.get("keypayTransactionId");

		if (keypayTransactionId != null) {
			setKeypayTransactionId(keypayTransactionId);
		}

		String keypayGoodCode = (String)attributes.get("keypayGoodCode");

		if (keypayGoodCode != null) {
			setKeypayGoodCode(keypayGoodCode);
		}

		String keypayMerchantCode = (String)attributes.get("keypayMerchantCode");

		if (keypayMerchantCode != null) {
			setKeypayMerchantCode(keypayMerchantCode);
		}

		String bankInfo = (String)attributes.get("bankInfo");

		if (bankInfo != null) {
			setBankInfo(bankInfo);
		}

		String placeInfo = (String)attributes.get("placeInfo");

		if (placeInfo != null) {
			setPlaceInfo(placeInfo);
		}

		Integer paymentStatus = (Integer)attributes.get("paymentStatus");

		if (paymentStatus != null) {
			setPaymentStatus(paymentStatus);
		}

		Integer paymentMethod = (Integer)attributes.get("paymentMethod");

		if (paymentMethod != null) {
			setPaymentMethod(paymentMethod);
		}

		Date confirmDatetime = (Date)attributes.get("confirmDatetime");

		if (confirmDatetime != null) {
			setConfirmDatetime(confirmDatetime);
		}

		Long confirmFileEntryId = (Long)attributes.get("confirmFileEntryId");

		if (confirmFileEntryId != null) {
			setConfirmFileEntryId(confirmFileEntryId);
		}

		Date approveDatetime = (Date)attributes.get("approveDatetime");

		if (approveDatetime != null) {
			setApproveDatetime(approveDatetime);
		}

		String accountUserName = (String)attributes.get("accountUserName");

		if (accountUserName != null) {
			setAccountUserName(accountUserName);
		}

		String approveNote = (String)attributes.get("approveNote");

		if (approveNote != null) {
			setApproveNote(approveNote);
		}

		String govAgencyTaxNo = (String)attributes.get("govAgencyTaxNo");

		if (govAgencyTaxNo != null) {
			setGovAgencyTaxNo(govAgencyTaxNo);
		}

		String invoiceTemplateNo = (String)attributes.get("invoiceTemplateNo");

		if (invoiceTemplateNo != null) {
			setInvoiceTemplateNo(invoiceTemplateNo);
		}

		String invoiceIssueNo = (String)attributes.get("invoiceIssueNo");

		if (invoiceIssueNo != null) {
			setInvoiceIssueNo(invoiceIssueNo);
		}

		String invoiceNo = (String)attributes.get("invoiceNo");

		if (invoiceNo != null) {
			setInvoiceNo(invoiceNo);
		}

		Integer syncStatus = (Integer)attributes.get("syncStatus");

		if (syncStatus != null) {
			setSyncStatus(syncStatus);
		}

		String oid = (String)attributes.get("oid");

		if (oid != null) {
			setOid(oid);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getPaymentFileId() {
		return _paymentFileId;
	}

	@Override
	public void setPaymentFileId(long paymentFileId) {
		_paymentFileId = paymentFileId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getDossierId() {
		return _dossierId;
	}

	@Override
	public void setDossierId(long dossierId) {
		_columnBitmask |= DOSSIERID_COLUMN_BITMASK;

		if (!_setOriginalDossierId) {
			_setOriginalDossierId = true;

			_originalDossierId = _dossierId;
		}

		_dossierId = dossierId;
	}

	public long getOriginalDossierId() {
		return _originalDossierId;
	}

	@JSON
	@Override
	public long getFileGroupId() {
		return _fileGroupId;
	}

	@Override
	public void setFileGroupId(long fileGroupId) {
		_fileGroupId = fileGroupId;
	}

	@JSON
	@Override
	public long getOwnerUserId() {
		return _ownerUserId;
	}

	@Override
	public void setOwnerUserId(long ownerUserId) {
		_ownerUserId = ownerUserId;
	}

	@Override
	public String getOwnerUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getOwnerUserId(), "uuid", _ownerUserUuid);
	}

	@Override
	public void setOwnerUserUuid(String ownerUserUuid) {
		_ownerUserUuid = ownerUserUuid;
	}

	@JSON
	@Override
	public long getOwnerOrganizationId() {
		return _ownerOrganizationId;
	}

	@Override
	public void setOwnerOrganizationId(long ownerOrganizationId) {
		_ownerOrganizationId = ownerOrganizationId;
	}

	@JSON
	@Override
	public long getGovAgencyOrganizationId() {
		return _govAgencyOrganizationId;
	}

	@Override
	public void setGovAgencyOrganizationId(long govAgencyOrganizationId) {
		_govAgencyOrganizationId = govAgencyOrganizationId;
	}

	@JSON
	@Override
	public String getPaymentName() {
		if (_paymentName == null) {
			return StringPool.BLANK;
		}
		else {
			return _paymentName;
		}
	}

	@Override
	public void setPaymentName(String paymentName) {
		_paymentName = paymentName;
	}

	@JSON
	@Override
	public Date getRequestDatetime() {
		return _requestDatetime;
	}

	@Override
	public void setRequestDatetime(Date requestDatetime) {
		_requestDatetime = requestDatetime;
	}

	@JSON
	@Override
	public double getAmount() {
		return _amount;
	}

	@Override
	public void setAmount(double amount) {
		_columnBitmask |= AMOUNT_COLUMN_BITMASK;

		if (!_setOriginalAmount) {
			_setOriginalAmount = true;

			_originalAmount = _amount;
		}

		_amount = amount;
	}

	public double getOriginalAmount() {
		return _originalAmount;
	}

	@JSON
	@Override
	public String getRequestNote() {
		if (_requestNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _requestNote;
		}
	}

	@Override
	public void setRequestNote(String requestNote) {
		_requestNote = requestNote;
	}

	@JSON
	@Override
	public String getPaymentOptions() {
		if (_paymentOptions == null) {
			return StringPool.BLANK;
		}
		else {
			return _paymentOptions;
		}
	}

	@Override
	public void setPaymentOptions(String paymentOptions) {
		_paymentOptions = paymentOptions;
	}

	@JSON
	@Override
	public String getKeypayUrl() {
		if (_keypayUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _keypayUrl;
		}
	}

	@Override
	public void setKeypayUrl(String keypayUrl) {
		_keypayUrl = keypayUrl;
	}

	@JSON
	@Override
	public long getKeypayTransactionId() {
		return _keypayTransactionId;
	}

	@Override
	public void setKeypayTransactionId(long keypayTransactionId) {
		_columnBitmask |= KEYPAYTRANSACTIONID_COLUMN_BITMASK;

		if (!_setOriginalKeypayTransactionId) {
			_setOriginalKeypayTransactionId = true;

			_originalKeypayTransactionId = _keypayTransactionId;
		}

		_keypayTransactionId = keypayTransactionId;
	}

	public long getOriginalKeypayTransactionId() {
		return _originalKeypayTransactionId;
	}

	@JSON
	@Override
	public String getKeypayGoodCode() {
		if (_keypayGoodCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _keypayGoodCode;
		}
	}

	@Override
	public void setKeypayGoodCode(String keypayGoodCode) {
		_columnBitmask |= KEYPAYGOODCODE_COLUMN_BITMASK;

		if (_originalKeypayGoodCode == null) {
			_originalKeypayGoodCode = _keypayGoodCode;
		}

		_keypayGoodCode = keypayGoodCode;
	}

	public String getOriginalKeypayGoodCode() {
		return GetterUtil.getString(_originalKeypayGoodCode);
	}

	@JSON
	@Override
	public String getKeypayMerchantCode() {
		if (_keypayMerchantCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _keypayMerchantCode;
		}
	}

	@Override
	public void setKeypayMerchantCode(String keypayMerchantCode) {
		_keypayMerchantCode = keypayMerchantCode;
	}

	@JSON
	@Override
	public String getBankInfo() {
		if (_bankInfo == null) {
			return StringPool.BLANK;
		}
		else {
			return _bankInfo;
		}
	}

	@Override
	public void setBankInfo(String bankInfo) {
		_bankInfo = bankInfo;
	}

	@JSON
	@Override
	public String getPlaceInfo() {
		if (_placeInfo == null) {
			return StringPool.BLANK;
		}
		else {
			return _placeInfo;
		}
	}

	@Override
	public void setPlaceInfo(String placeInfo) {
		_placeInfo = placeInfo;
	}

	@JSON
	@Override
	public int getPaymentStatus() {
		return _paymentStatus;
	}

	@Override
	public void setPaymentStatus(int paymentStatus) {
		_columnBitmask |= PAYMENTSTATUS_COLUMN_BITMASK;

		if (!_setOriginalPaymentStatus) {
			_setOriginalPaymentStatus = true;

			_originalPaymentStatus = _paymentStatus;
		}

		_paymentStatus = paymentStatus;
	}

	public int getOriginalPaymentStatus() {
		return _originalPaymentStatus;
	}

	@JSON
	@Override
	public int getPaymentMethod() {
		return _paymentMethod;
	}

	@Override
	public void setPaymentMethod(int paymentMethod) {
		_paymentMethod = paymentMethod;
	}

	@JSON
	@Override
	public Date getConfirmDatetime() {
		return _confirmDatetime;
	}

	@Override
	public void setConfirmDatetime(Date confirmDatetime) {
		_confirmDatetime = confirmDatetime;
	}

	@JSON
	@Override
	public long getConfirmFileEntryId() {
		return _confirmFileEntryId;
	}

	@Override
	public void setConfirmFileEntryId(long confirmFileEntryId) {
		_confirmFileEntryId = confirmFileEntryId;
	}

	@JSON
	@Override
	public Date getApproveDatetime() {
		return _approveDatetime;
	}

	@Override
	public void setApproveDatetime(Date approveDatetime) {
		_approveDatetime = approveDatetime;
	}

	@JSON
	@Override
	public String getAccountUserName() {
		if (_accountUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _accountUserName;
		}
	}

	@Override
	public void setAccountUserName(String accountUserName) {
		_accountUserName = accountUserName;
	}

	@JSON
	@Override
	public String getApproveNote() {
		if (_approveNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _approveNote;
		}
	}

	@Override
	public void setApproveNote(String approveNote) {
		_approveNote = approveNote;
	}

	@JSON
	@Override
	public String getGovAgencyTaxNo() {
		if (_govAgencyTaxNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyTaxNo;
		}
	}

	@Override
	public void setGovAgencyTaxNo(String govAgencyTaxNo) {
		_govAgencyTaxNo = govAgencyTaxNo;
	}

	@JSON
	@Override
	public String getInvoiceTemplateNo() {
		if (_invoiceTemplateNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _invoiceTemplateNo;
		}
	}

	@Override
	public void setInvoiceTemplateNo(String invoiceTemplateNo) {
		_invoiceTemplateNo = invoiceTemplateNo;
	}

	@JSON
	@Override
	public String getInvoiceIssueNo() {
		if (_invoiceIssueNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _invoiceIssueNo;
		}
	}

	@Override
	public void setInvoiceIssueNo(String invoiceIssueNo) {
		_invoiceIssueNo = invoiceIssueNo;
	}

	@JSON
	@Override
	public String getInvoiceNo() {
		if (_invoiceNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _invoiceNo;
		}
	}

	@Override
	public void setInvoiceNo(String invoiceNo) {
		_invoiceNo = invoiceNo;
	}

	@JSON
	@Override
	public int getSyncStatus() {
		return _syncStatus;
	}

	@Override
	public void setSyncStatus(int syncStatus) {
		_syncStatus = syncStatus;
	}

	@JSON
	@Override
	public String getOid() {
		if (_oid == null) {
			return StringPool.BLANK;
		}
		else {
			return _oid;
		}
	}

	@Override
	public void setOid(String oid) {
		_columnBitmask |= OID_COLUMN_BITMASK;

		if (_originalOid == null) {
			_originalOid = _oid;
		}

		_oid = oid;
	}

	public String getOriginalOid() {
		return GetterUtil.getString(_originalOid);
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				PaymentFile.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			PaymentFile.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PaymentFile toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PaymentFile)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PaymentFileImpl paymentFileImpl = new PaymentFileImpl();

		paymentFileImpl.setUuid(getUuid());
		paymentFileImpl.setPaymentFileId(getPaymentFileId());
		paymentFileImpl.setCompanyId(getCompanyId());
		paymentFileImpl.setGroupId(getGroupId());
		paymentFileImpl.setUserId(getUserId());
		paymentFileImpl.setCreateDate(getCreateDate());
		paymentFileImpl.setModifiedDate(getModifiedDate());
		paymentFileImpl.setDossierId(getDossierId());
		paymentFileImpl.setFileGroupId(getFileGroupId());
		paymentFileImpl.setOwnerUserId(getOwnerUserId());
		paymentFileImpl.setOwnerOrganizationId(getOwnerOrganizationId());
		paymentFileImpl.setGovAgencyOrganizationId(getGovAgencyOrganizationId());
		paymentFileImpl.setPaymentName(getPaymentName());
		paymentFileImpl.setRequestDatetime(getRequestDatetime());
		paymentFileImpl.setAmount(getAmount());
		paymentFileImpl.setRequestNote(getRequestNote());
		paymentFileImpl.setPaymentOptions(getPaymentOptions());
		paymentFileImpl.setKeypayUrl(getKeypayUrl());
		paymentFileImpl.setKeypayTransactionId(getKeypayTransactionId());
		paymentFileImpl.setKeypayGoodCode(getKeypayGoodCode());
		paymentFileImpl.setKeypayMerchantCode(getKeypayMerchantCode());
		paymentFileImpl.setBankInfo(getBankInfo());
		paymentFileImpl.setPlaceInfo(getPlaceInfo());
		paymentFileImpl.setPaymentStatus(getPaymentStatus());
		paymentFileImpl.setPaymentMethod(getPaymentMethod());
		paymentFileImpl.setConfirmDatetime(getConfirmDatetime());
		paymentFileImpl.setConfirmFileEntryId(getConfirmFileEntryId());
		paymentFileImpl.setApproveDatetime(getApproveDatetime());
		paymentFileImpl.setAccountUserName(getAccountUserName());
		paymentFileImpl.setApproveNote(getApproveNote());
		paymentFileImpl.setGovAgencyTaxNo(getGovAgencyTaxNo());
		paymentFileImpl.setInvoiceTemplateNo(getInvoiceTemplateNo());
		paymentFileImpl.setInvoiceIssueNo(getInvoiceIssueNo());
		paymentFileImpl.setInvoiceNo(getInvoiceNo());
		paymentFileImpl.setSyncStatus(getSyncStatus());
		paymentFileImpl.setOid(getOid());

		paymentFileImpl.resetOriginalValues();

		return paymentFileImpl;
	}

	@Override
	public int compareTo(PaymentFile paymentFile) {
		long primaryKey = paymentFile.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PaymentFile)) {
			return false;
		}

		PaymentFile paymentFile = (PaymentFile)obj;

		long primaryKey = paymentFile.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PaymentFileModelImpl paymentFileModelImpl = this;

		paymentFileModelImpl._originalUuid = paymentFileModelImpl._uuid;

		paymentFileModelImpl._originalCompanyId = paymentFileModelImpl._companyId;

		paymentFileModelImpl._setOriginalCompanyId = false;

		paymentFileModelImpl._originalGroupId = paymentFileModelImpl._groupId;

		paymentFileModelImpl._setOriginalGroupId = false;

		paymentFileModelImpl._originalDossierId = paymentFileModelImpl._dossierId;

		paymentFileModelImpl._setOriginalDossierId = false;

		paymentFileModelImpl._originalAmount = paymentFileModelImpl._amount;

		paymentFileModelImpl._setOriginalAmount = false;

		paymentFileModelImpl._originalKeypayTransactionId = paymentFileModelImpl._keypayTransactionId;

		paymentFileModelImpl._setOriginalKeypayTransactionId = false;

		paymentFileModelImpl._originalKeypayGoodCode = paymentFileModelImpl._keypayGoodCode;

		paymentFileModelImpl._originalPaymentStatus = paymentFileModelImpl._paymentStatus;

		paymentFileModelImpl._setOriginalPaymentStatus = false;

		paymentFileModelImpl._originalOid = paymentFileModelImpl._oid;

		paymentFileModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PaymentFile> toCacheModel() {
		PaymentFileCacheModel paymentFileCacheModel = new PaymentFileCacheModel();

		paymentFileCacheModel.uuid = getUuid();

		String uuid = paymentFileCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			paymentFileCacheModel.uuid = null;
		}

		paymentFileCacheModel.paymentFileId = getPaymentFileId();

		paymentFileCacheModel.companyId = getCompanyId();

		paymentFileCacheModel.groupId = getGroupId();

		paymentFileCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			paymentFileCacheModel.createDate = createDate.getTime();
		}
		else {
			paymentFileCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			paymentFileCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			paymentFileCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		paymentFileCacheModel.dossierId = getDossierId();

		paymentFileCacheModel.fileGroupId = getFileGroupId();

		paymentFileCacheModel.ownerUserId = getOwnerUserId();

		paymentFileCacheModel.ownerOrganizationId = getOwnerOrganizationId();

		paymentFileCacheModel.govAgencyOrganizationId = getGovAgencyOrganizationId();

		paymentFileCacheModel.paymentName = getPaymentName();

		String paymentName = paymentFileCacheModel.paymentName;

		if ((paymentName != null) && (paymentName.length() == 0)) {
			paymentFileCacheModel.paymentName = null;
		}

		Date requestDatetime = getRequestDatetime();

		if (requestDatetime != null) {
			paymentFileCacheModel.requestDatetime = requestDatetime.getTime();
		}
		else {
			paymentFileCacheModel.requestDatetime = Long.MIN_VALUE;
		}

		paymentFileCacheModel.amount = getAmount();

		paymentFileCacheModel.requestNote = getRequestNote();

		String requestNote = paymentFileCacheModel.requestNote;

		if ((requestNote != null) && (requestNote.length() == 0)) {
			paymentFileCacheModel.requestNote = null;
		}

		paymentFileCacheModel.paymentOptions = getPaymentOptions();

		String paymentOptions = paymentFileCacheModel.paymentOptions;

		if ((paymentOptions != null) && (paymentOptions.length() == 0)) {
			paymentFileCacheModel.paymentOptions = null;
		}

		paymentFileCacheModel.keypayUrl = getKeypayUrl();

		String keypayUrl = paymentFileCacheModel.keypayUrl;

		if ((keypayUrl != null) && (keypayUrl.length() == 0)) {
			paymentFileCacheModel.keypayUrl = null;
		}

		paymentFileCacheModel.keypayTransactionId = getKeypayTransactionId();

		paymentFileCacheModel.keypayGoodCode = getKeypayGoodCode();

		String keypayGoodCode = paymentFileCacheModel.keypayGoodCode;

		if ((keypayGoodCode != null) && (keypayGoodCode.length() == 0)) {
			paymentFileCacheModel.keypayGoodCode = null;
		}

		paymentFileCacheModel.keypayMerchantCode = getKeypayMerchantCode();

		String keypayMerchantCode = paymentFileCacheModel.keypayMerchantCode;

		if ((keypayMerchantCode != null) && (keypayMerchantCode.length() == 0)) {
			paymentFileCacheModel.keypayMerchantCode = null;
		}

		paymentFileCacheModel.bankInfo = getBankInfo();

		String bankInfo = paymentFileCacheModel.bankInfo;

		if ((bankInfo != null) && (bankInfo.length() == 0)) {
			paymentFileCacheModel.bankInfo = null;
		}

		paymentFileCacheModel.placeInfo = getPlaceInfo();

		String placeInfo = paymentFileCacheModel.placeInfo;

		if ((placeInfo != null) && (placeInfo.length() == 0)) {
			paymentFileCacheModel.placeInfo = null;
		}

		paymentFileCacheModel.paymentStatus = getPaymentStatus();

		paymentFileCacheModel.paymentMethod = getPaymentMethod();

		Date confirmDatetime = getConfirmDatetime();

		if (confirmDatetime != null) {
			paymentFileCacheModel.confirmDatetime = confirmDatetime.getTime();
		}
		else {
			paymentFileCacheModel.confirmDatetime = Long.MIN_VALUE;
		}

		paymentFileCacheModel.confirmFileEntryId = getConfirmFileEntryId();

		Date approveDatetime = getApproveDatetime();

		if (approveDatetime != null) {
			paymentFileCacheModel.approveDatetime = approveDatetime.getTime();
		}
		else {
			paymentFileCacheModel.approveDatetime = Long.MIN_VALUE;
		}

		paymentFileCacheModel.accountUserName = getAccountUserName();

		String accountUserName = paymentFileCacheModel.accountUserName;

		if ((accountUserName != null) && (accountUserName.length() == 0)) {
			paymentFileCacheModel.accountUserName = null;
		}

		paymentFileCacheModel.approveNote = getApproveNote();

		String approveNote = paymentFileCacheModel.approveNote;

		if ((approveNote != null) && (approveNote.length() == 0)) {
			paymentFileCacheModel.approveNote = null;
		}

		paymentFileCacheModel.govAgencyTaxNo = getGovAgencyTaxNo();

		String govAgencyTaxNo = paymentFileCacheModel.govAgencyTaxNo;

		if ((govAgencyTaxNo != null) && (govAgencyTaxNo.length() == 0)) {
			paymentFileCacheModel.govAgencyTaxNo = null;
		}

		paymentFileCacheModel.invoiceTemplateNo = getInvoiceTemplateNo();

		String invoiceTemplateNo = paymentFileCacheModel.invoiceTemplateNo;

		if ((invoiceTemplateNo != null) && (invoiceTemplateNo.length() == 0)) {
			paymentFileCacheModel.invoiceTemplateNo = null;
		}

		paymentFileCacheModel.invoiceIssueNo = getInvoiceIssueNo();

		String invoiceIssueNo = paymentFileCacheModel.invoiceIssueNo;

		if ((invoiceIssueNo != null) && (invoiceIssueNo.length() == 0)) {
			paymentFileCacheModel.invoiceIssueNo = null;
		}

		paymentFileCacheModel.invoiceNo = getInvoiceNo();

		String invoiceNo = paymentFileCacheModel.invoiceNo;

		if ((invoiceNo != null) && (invoiceNo.length() == 0)) {
			paymentFileCacheModel.invoiceNo = null;
		}

		paymentFileCacheModel.syncStatus = getSyncStatus();

		paymentFileCacheModel.oid = getOid();

		String oid = paymentFileCacheModel.oid;

		if ((oid != null) && (oid.length() == 0)) {
			paymentFileCacheModel.oid = null;
		}

		return paymentFileCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(73);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", paymentFileId=");
		sb.append(getPaymentFileId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", dossierId=");
		sb.append(getDossierId());
		sb.append(", fileGroupId=");
		sb.append(getFileGroupId());
		sb.append(", ownerUserId=");
		sb.append(getOwnerUserId());
		sb.append(", ownerOrganizationId=");
		sb.append(getOwnerOrganizationId());
		sb.append(", govAgencyOrganizationId=");
		sb.append(getGovAgencyOrganizationId());
		sb.append(", paymentName=");
		sb.append(getPaymentName());
		sb.append(", requestDatetime=");
		sb.append(getRequestDatetime());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", requestNote=");
		sb.append(getRequestNote());
		sb.append(", paymentOptions=");
		sb.append(getPaymentOptions());
		sb.append(", keypayUrl=");
		sb.append(getKeypayUrl());
		sb.append(", keypayTransactionId=");
		sb.append(getKeypayTransactionId());
		sb.append(", keypayGoodCode=");
		sb.append(getKeypayGoodCode());
		sb.append(", keypayMerchantCode=");
		sb.append(getKeypayMerchantCode());
		sb.append(", bankInfo=");
		sb.append(getBankInfo());
		sb.append(", placeInfo=");
		sb.append(getPlaceInfo());
		sb.append(", paymentStatus=");
		sb.append(getPaymentStatus());
		sb.append(", paymentMethod=");
		sb.append(getPaymentMethod());
		sb.append(", confirmDatetime=");
		sb.append(getConfirmDatetime());
		sb.append(", confirmFileEntryId=");
		sb.append(getConfirmFileEntryId());
		sb.append(", approveDatetime=");
		sb.append(getApproveDatetime());
		sb.append(", accountUserName=");
		sb.append(getAccountUserName());
		sb.append(", approveNote=");
		sb.append(getApproveNote());
		sb.append(", govAgencyTaxNo=");
		sb.append(getGovAgencyTaxNo());
		sb.append(", invoiceTemplateNo=");
		sb.append(getInvoiceTemplateNo());
		sb.append(", invoiceIssueNo=");
		sb.append(getInvoiceIssueNo());
		sb.append(", invoiceNo=");
		sb.append(getInvoiceNo());
		sb.append(", syncStatus=");
		sb.append(getSyncStatus());
		sb.append(", oid=");
		sb.append(getOid());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(112);

		sb.append("<model><model-name>");
		sb.append("org.opencps.paymentmgt.model.PaymentFile");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentFileId</column-name><column-value><![CDATA[");
		sb.append(getPaymentFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierId</column-name><column-value><![CDATA[");
		sb.append(getDossierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileGroupId</column-name><column-value><![CDATA[");
		sb.append(getFileGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ownerUserId</column-name><column-value><![CDATA[");
		sb.append(getOwnerUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ownerOrganizationId</column-name><column-value><![CDATA[");
		sb.append(getOwnerOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyOrganizationId</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentName</column-name><column-value><![CDATA[");
		sb.append(getPaymentName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requestDatetime</column-name><column-value><![CDATA[");
		sb.append(getRequestDatetime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requestNote</column-name><column-value><![CDATA[");
		sb.append(getRequestNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentOptions</column-name><column-value><![CDATA[");
		sb.append(getPaymentOptions());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keypayUrl</column-name><column-value><![CDATA[");
		sb.append(getKeypayUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keypayTransactionId</column-name><column-value><![CDATA[");
		sb.append(getKeypayTransactionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keypayGoodCode</column-name><column-value><![CDATA[");
		sb.append(getKeypayGoodCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keypayMerchantCode</column-name><column-value><![CDATA[");
		sb.append(getKeypayMerchantCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bankInfo</column-name><column-value><![CDATA[");
		sb.append(getBankInfo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>placeInfo</column-name><column-value><![CDATA[");
		sb.append(getPlaceInfo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentStatus</column-name><column-value><![CDATA[");
		sb.append(getPaymentStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentMethod</column-name><column-value><![CDATA[");
		sb.append(getPaymentMethod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>confirmDatetime</column-name><column-value><![CDATA[");
		sb.append(getConfirmDatetime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>confirmFileEntryId</column-name><column-value><![CDATA[");
		sb.append(getConfirmFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approveDatetime</column-name><column-value><![CDATA[");
		sb.append(getApproveDatetime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountUserName</column-name><column-value><![CDATA[");
		sb.append(getAccountUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approveNote</column-name><column-value><![CDATA[");
		sb.append(getApproveNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyTaxNo</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyTaxNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invoiceTemplateNo</column-name><column-value><![CDATA[");
		sb.append(getInvoiceTemplateNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invoiceIssueNo</column-name><column-value><![CDATA[");
		sb.append(getInvoiceIssueNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invoiceNo</column-name><column-value><![CDATA[");
		sb.append(getInvoiceNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>syncStatus</column-name><column-value><![CDATA[");
		sb.append(getSyncStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oid</column-name><column-value><![CDATA[");
		sb.append(getOid());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PaymentFile.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PaymentFile.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _paymentFileId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private long _dossierId;
	private long _originalDossierId;
	private boolean _setOriginalDossierId;
	private long _fileGroupId;
	private long _ownerUserId;
	private String _ownerUserUuid;
	private long _ownerOrganizationId;
	private long _govAgencyOrganizationId;
	private String _paymentName;
	private Date _requestDatetime;
	private double _amount;
	private double _originalAmount;
	private boolean _setOriginalAmount;
	private String _requestNote;
	private String _paymentOptions;
	private String _keypayUrl;
	private long _keypayTransactionId;
	private long _originalKeypayTransactionId;
	private boolean _setOriginalKeypayTransactionId;
	private String _keypayGoodCode;
	private String _originalKeypayGoodCode;
	private String _keypayMerchantCode;
	private String _bankInfo;
	private String _placeInfo;
	private int _paymentStatus;
	private int _originalPaymentStatus;
	private boolean _setOriginalPaymentStatus;
	private int _paymentMethod;
	private Date _confirmDatetime;
	private long _confirmFileEntryId;
	private Date _approveDatetime;
	private String _accountUserName;
	private String _approveNote;
	private String _govAgencyTaxNo;
	private String _invoiceTemplateNo;
	private String _invoiceIssueNo;
	private String _invoiceNo;
	private int _syncStatus;
	private String _oid;
	private String _originalOid;
	private long _columnBitmask;
	private PaymentFile _escapedModel;
}